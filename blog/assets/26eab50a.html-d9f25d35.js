const t=JSON.parse('{"key":"v-190a31c0","path":"/posts/26eab50a.html","title":"Android 通过 Hook 启动未注册 Activity","lang":"zh-CN","frontmatter":{"permalink":"/posts/26eab50a.html","title":"Android 通过 Hook 启动未注册 Activity","abbrlink":"26eab50a","date":"2018-01-15T16:10:41.000Z","updated":"2023-12-30T08:17:02.000Z","tag":"android","description":"简介 hook 是钩子的意思，hook 的过程是通过反射、代理等改变系统原有的行为以达到自己的目的。 本文主要是通过 hook android 中的 ActivityManagerService 和 Handler.CallBack，欺骗系统调起 activity 的过程，在调用 startActivity 时将 targetIntent 通过 proxy 伪装为 proxyIntent，等到通过系统验证，正式启动 activity 时，再讲 proxyIntent 恢复为 targetIntent，从而实现调用未在 AndroidManifest.xml 中注册的 activity。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/26eab50a.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android 通过 Hook 启动未注册 Activity"}],["meta",{"property":"og:description","content":"简介 hook 是钩子的意思，hook 的过程是通过反射、代理等改变系统原有的行为以达到自己的目的。 本文主要是通过 hook android 中的 ActivityManagerService 和 Handler.CallBack，欺骗系统调起 activity 的过程，在调用 startActivity 时将 targetIntent 通过 proxy 伪装为 proxyIntent，等到通过系统验证，正式启动 activity 时，再讲 proxyIntent 恢复为 targetIntent，从而实现调用未在 AndroidManifest.xml 中注册的 activity。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T00:13:21.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:published_time","content":"2018-01-15T16:10:41.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T00:13:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 通过 Hook 启动未注册 Activity\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-01-15T16:10:41.000Z\\",\\"dateModified\\":\\"2024-01-01T00:13:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.新建 Activity 等","slug":"_1-新建-activity-等","link":"#_1-新建-activity-等","children":[]},{"level":2,"title":"2.Utils.java 实现 hook 具体逻辑","slug":"_2-utils-java-实现-hook-具体逻辑","link":"#_2-utils-java-实现-hook-具体逻辑","children":[]}],"git":{"createdTime":1704068001000,"updatedTime":1704068001000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":2.73,"words":820},"filePathRelative":"_posts/Android通过Hook启动未注册Activity.md","localizedDate":"2018年1月16日","excerpt":"<h1> 简介</h1>\\n<p>hook 是钩子的意思，hook 的过程是通过反射、代理等改变系统原有的行为以达到自己的目的。</p>\\n<p>本文主要是通过 hook android 中的 ActivityManagerService 和 Handler.CallBack，欺骗系统调起 activity 的过程，在调用 startActivity 时将 targetIntent 通过 proxy 伪装为 proxyIntent，等到通过系统验证，正式启动 activity 时，再讲 proxyIntent 恢复为 targetIntent，从而实现调用未在 AndroidManifest.xml 中注册的 activity。</p>","autoDesc":true}');export{t as data};
