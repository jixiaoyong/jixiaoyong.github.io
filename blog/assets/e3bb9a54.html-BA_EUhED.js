import{_ as t,c as i,a as e,o as r}from"./app-3cnvzyR2.js";const n={};function a(g,o){return r(),i("div",null,o[0]||(o[0]=[e('<blockquote><p>说明：本文基于<a href="http://gityuan.com/android/" target="_blank" rel="noopener noreferrer">Android 系统开篇 - Gityuan 博客 | 袁辉辉博客</a> 的学习笔记整理</p></blockquote><p>Android 系统大体分为 4 个模块，从底层开始依次是 1.linux 内核、2.系统库+Android 运行时、3.框架层、4.应用层。</p><figure><img src="https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidSystemArchitecture.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下图描述了 Android 系统从开机到 Apk 运行的整个流程。</p><figure><img src="https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/androidBoot.jpg" alt="系统启动框架图，来自 gityuan.com" tabindex="0" loading="lazy"><figcaption>系统启动框架图，来自 <a href="http://gityuan.com" target="_blank" rel="noopener noreferrer">gityuan.com</a></figcaption></figure><p>流程如下：<code>Loader</code> -&gt; <code>Kernel</code> -&gt; <code>Native</code>-&gt; <code>Framework</code> -&gt; <code>App</code></p><p><strong>Loader 层</strong></p><ol><li>Boot ROM：开机时，引导芯片从 ROM 读取读取初始化代码，加载引导程序到 RAM 中。</li><li>Boot Loader：是启动 Android 系统之前的引导程序，检查 RAM、初始化硬件参数等。</li></ol><p><strong>Kernel 层</strong>（即 Android 内核层，进入 Android 系统）</p><ol><li>swapper 进程（pid=0）：Boot Loader 启动 swapper（idle）进程，是由内核创建的第一个进程，用来初始化进程管理、内存管理、驱动等等。</li><li>kthreadd 进程（pid=2）：是 Linux 系统的内核进程，<strong>是所有内核进程的鼻祖</strong>。</li></ol><hr><p><strong>Syscall</strong>，在 Native 和 Kernel 之间的系统调用层。</p><hr><p><strong>Native 层</strong></p><ol><li>init 进程（pid=1）：由 swapper 进程创建，<strong>是所有用户进程鼻祖</strong></li><li>init 进程孵化出用户守护进程、启动 ServiceManager 管理系统服务，启动开机动画 Bootnaim。</li></ol><hr><p><strong>JNI</strong>，Java 层和 Native（C/C++）层之间。</p><hr><p><strong>Framework 层</strong></p><ol><li>Zygote 进程：由 init 进程 fork 生成，是<strong>Android 系统第一个 java 进程，是所有 java 进程的父进程</strong></li><li>SystemServer 进程：由 Zygote 进程 fork 而来，<strong>是 Zygote 孵化的第一个进程</strong>，负责启动和管理整个<strong>java framework</strong>，如 ActivityManager、PowerManager...</li><li>MediaServer 进程：由 init 进程 fork 而来，负责启动和管理整个<strong>C++ framework</strong></li></ol><p><strong>APP 层</strong></p><ol><li>Launcher：<strong>Zygote 进程孵化的第一个 App 进程</strong>，桌面 App。</li><li>其他由 Zygote 进程孵化的系统进程（Browser、Phone...）和非系统 app 进程。</li></ol><p>扼要内容如图：</p><figure><img src="https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidBootImg.png" alt="系统启动示意图" tabindex="0" loading="lazy"><figcaption>系统启动示意图</figcaption></figure><p>Android 常用的通信方式</p><ol><li>Binder</li><li>Socket</li><li>Handler</li></ol><p><strong>Binder/Socket 用于进程间（都具有独立的地址空间）通信，而 Handler 消息机制用于同进程的线程间（共享内存空间）通信</strong></p><p>在 Android 系统中：</p><ul><li>Zygote 进程 --&gt; Socket 机制</li><li>SystemServer、MediaServer、App 之间 --&gt; Binder IPC</li><li>同一进程不同线程间 --&gt; Handler</li></ul>',29)]))}const p=t(n,[["render",a]]),l=JSON.parse('{"path":"/posts/e3bb9a54.html","title":"Android 系统架构简介","lang":"zh-CN","frontmatter":{"permalink":"/posts/e3bb9a54.html","title":"Android 系统架构简介","tag":"android","abbrlink":"e3bb9a54","date":"2018-02-23T14:35:14.000Z","updated":"2023-12-30T08:17:02.000Z","isOriginal":true,"description":"说明：本文基于Android 系统开篇 - Gityuan 博客 | 袁辉辉博客 的学习笔记整理 Android 系统大体分为 4 个模块，从底层开始依次是 1.linux 内核、2.系统库+Android 运行时、3.框架层、4.应用层。 下图描述了 Android 系统从开机到 Apk 运行的整个流程。 系统启动框架图，来自 gityuan.com...","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/e3bb9a54.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android 系统架构简介"}],["meta",{"property":"og:description","content":"说明：本文基于Android 系统开篇 - Gityuan 博客 | 袁辉辉博客 的学习笔记整理 Android 系统大体分为 4 个模块，从底层开始依次是 1.linux 内核、2.系统库+Android 运行时、3.框架层、4.应用层。 下图描述了 Android 系统从开机到 Apk 运行的整个流程。 系统启动框架图，来自 gityuan.com..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidSystemArchitecture.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-04T03:36:59.000Z"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:published_time","content":"2018-02-23T14:35:14.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-04T03:36:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 系统架构简介\\",\\"image\\":[\\"https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidSystemArchitecture.png\\",\\"https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/androidBoot.jpg\\",\\"https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidBootImg.png\\"],\\"datePublished\\":\\"2018-02-23T14:35:14.000Z\\",\\"dateModified\\":\\"2024-06-04T03:36:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"git":{"createdTime":1653726847000,"updatedTime":1717472219000,"contributors":[{"name":"jixiaoyong","username":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":4,"url":"https://github.com/jixiaoyong"},{"name":"JI,XIAOYONG","username":"","email":"jixiaoyong1995@gmail.com","commits":2}]},"readingTime":{"minutes":1.95,"words":585},"filePathRelative":"_posts/Android系统架构简介.md","localizedDate":"2018年2月23日","excerpt":"<blockquote>\\n<p>说明：本文基于<a href=\\"http://gityuan.com/android/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Android 系统开篇 - Gityuan 博客 | 袁辉辉博客</a> 的学习笔记整理</p>\\n</blockquote>\\n<p>Android 系统大体分为 4 个模块，从底层开始依次是 1.linux 内核、2.系统库+Android 运行时、3.框架层、4.应用层。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/jixiaoyong/jixiaoyong.github.io/master/images/blog/2018-02/AndroidSystemArchitecture.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{p as comp,l as data};
