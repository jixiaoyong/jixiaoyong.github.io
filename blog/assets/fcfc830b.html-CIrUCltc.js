import{_ as n,c as s,o as i,a}from"./app-Bz_HPgZ1.js";const e={},t=a(`<p>这几天学习 AppWidget，很简单的组件却花费了不少功夫，今天对 PendingIntent 的用法做了一些简单的整理。</p><p><strong>PendingIntent</strong></p><blockquote><p>PandingIntent 就像是一个设计好的处理预案，当达到某个特定条件时，便会调用该 Intent 所指定动作（打开服务，Activity 或者发送广播）。</p><p>这里使用该方法在 AppWidget 里面为按钮添加监听事件，当按钮被点击的时候触发相应的动作</p></blockquote><p>AppWidget 和应用程序不再同一个进程当中，而是在 HomeScreen 上面执行，所以不能直接为 AppWidget 中的 Button 添加监听事件，需要用 <code>remoteViews.setPendingIntent(R.id.widget_button,pendingIntent);</code>意思是当按下按钮的时候 pendingIntent 中的 Intent 就会执行</p><p>PendingIntent 当某个事件出现之后才会执行</p><p>RemoteViews 对象 代表了一系列的 View 对象，和主程序不在同一个进程为 AppWidget 控件绑定处理器</p><p><strong>流程概述：</strong></p><ul><li><p>添加 appwidget_provider_info.xml 在 res/xml 下新建 appwidget_provider_info.xml</p><ul><li>描述 AppWidget 的基本信息如最小高度、宽度等，还有就是该挂件的布局文件</li></ul></li><li><p>在 res/layout 下面为该挂件设置具体的布局样式</p><ul><li>向 AppWidget 的布局文件中添加一个 Button</li><li>向 AppWidget 的布局文件中添加一个 TextView</li></ul></li><li><p>新建 MyAppWidget.java 继承自 AppWidgetProvider</p><p>在该类的 onUpdate() 方法中为 Button 设置、添加监听事件</p><ul><li>建立一个 Intent 对象</li><li>用该 Intent 对象创建一个 PendingIntent 对象</li><li>创建一个 RemoteViews 对象</li><li>用该 RemoveViews 对象为 按钮绑定事件处理器</li><li>更新按钮</li></ul></li><li><p>注册事件</p></li><li><p>备注：要是为 AppWidget 中的 Button 设置的事件是打开一个 TargetActivity，还需要添加一个 TargetActivity 类和对应的布局文件</p></li></ul><p><strong>以下是代码</strong></p><ul><li>appwidget_provider_info.xml</li></ul><p>这个布局文件是 AppWidget 的信息</p><p>描述了 AppWidget 的最小高，最小宽以及它的布局文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;appwidget-provider</span></span>
<span class="line"><span>    android:minHeight=&quot;200dp&quot;</span></span>
<span class="line"><span>    android:minWidth=&quot;300dp&quot;</span></span>
<span class="line"><span>    android:initialLayout=&quot;@layout/app_widget&quot;</span></span>
<span class="line"><span>    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;</span></span>
<span class="line"><span>&lt;/appwidget-provider&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>app_widget.xml</li></ul><p>这个布局文件是 Widget 在桌面上显示的样式</p><p>定义了 AppWidget 中各个组件及其样式</p><p>其中 Button 用来响应点击事件，加入 TargetActivity</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span></span>
<span class="line"><span>    android:layout_width=&quot;200dp&quot;</span></span>
<span class="line"><span>    android:layout_height=&quot;200dp&quot;</span></span>
<span class="line"><span>    android:orientation=&quot;vertical&quot;&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;TextView</span></span>
<span class="line"><span>        android:layout_width=&quot;match_parent&quot;</span></span>
<span class="line"><span>        android:layout_height=&quot;wrap_content&quot;</span></span>
<span class="line"><span>        android:text=&quot;hello,world!&quot;/&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;Button</span></span>
<span class="line"><span>        android:id=&quot;@+id/app_widget_btn&quot;</span></span>
<span class="line"><span>        android:layout_width=&quot;200dp&quot;</span></span>
<span class="line"><span>        android:layout_height=&quot;150dp&quot;</span></span>
<span class="line"><span>        android:background=&quot;#ff00ff&quot;</span></span>
<span class="line"><span>        android:text=&quot;this is my app widget button&quot;/&gt;</span></span>
<span class="line"><span>&lt;/LinearLayout&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>target_activity.xml</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span></span>
<span class="line"><span>    android:layout_width=&quot;match_parent&quot;</span></span>
<span class="line"><span>    android:layout_height=&quot;match_parent&quot;&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    &lt;TextView</span></span>
<span class="line"><span>        android:layout_width=&quot;match_parent&quot;</span></span>
<span class="line"><span>        android:layout_height=&quot;wrap_content&quot;</span></span>
<span class="line"><span>        android:textSize=&quot;50sp&quot;</span></span>
<span class="line"><span>        android:background=&quot;#00ff00&quot;</span></span>
<span class="line"><span>        android:text=&quot;\\n hello,welcome to target activity!&quot;/&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;/LinearLayout&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>MyAppWidget.java</li></ul><p>主要是修改了 update() 方法：</p><p>定义了一个预先设定的动作—- Intent 对象；</p><p>利用该 Intent 读写，创建一个 PendingIntent 对象；</p><p>创建一个 RemoteView 对象，并为按钮绑定监听事件</p><p>刷新 AppWidget。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>public class MyAppWidget extends AppWidgetProvider {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void onReceive(Context context, Intent intent) {</span></span>
<span class="line"><span>        // TODO Auto-generated method stub</span></span>
<span class="line"><span>        super.onReceive(context, intent);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void onUpdate(Context context, AppWidgetManager appWidgetManager,</span></span>
<span class="line"><span>                         int[] appWidgetIds) {</span></span>
<span class="line"><span>        // TODO Auto-generated method stub</span></span>
<span class="line"><span>        super.onUpdate(context, appWidgetManager, appWidgetIds);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        //appWidgetIds 每一次向屏幕添加 AppWidget 的时候都会增加一个唯一的 appWidget 的 Id</span></span>
<span class="line"><span>        for(int i = 0; i &lt; appWidgetIds.length;i++){</span></span>
<span class="line"><span>          //创建一个 Intent 对象</span></span>
<span class="line"><span>            Intent intent = new Intent(context,TargetActivity.class);</span></span>
<span class="line"><span>            //创建一个 PendingIntent 对象</span></span>
<span class="line"><span>            PendingIntent pendingIntent = PendingIntent.getActivity(context,0,intent,0);</span></span>
<span class="line"><span>            // remoteViews 代表 AppWidget 上所有的控件</span></span>
<span class="line"><span>            RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.app_widget);</span></span>
<span class="line"><span>            //为按钮绑定事件处理器</span></span>
<span class="line"><span>            /*</span></span>
<span class="line"><span>            * 参1，指定被绑定处理器的控件id</span></span>
<span class="line"><span>            * 参2，指定事件发生时会被执行的 PendingIntent</span></span>
<span class="line"><span>             */</span></span>
<span class="line"><span>            remoteViews.setOnClickPendingIntent(R.id.app_widget_btn,pendingIntent);</span></span>
<span class="line"><span>            //更新 AppWidget ，参1是用于指定被更新 appWidget 的ID</span></span>
<span class="line"><span>            appWidgetManager.updateAppWidget(appWidgetIds[i],remoteViews);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void onDeleted(Context context, int[] appWidgetIds) {</span></span>
<span class="line"><span>        // TODO Auto-generated method stub</span></span>
<span class="line"><span>        super.onDeleted(context, appWidgetIds);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void onEnabled(Context context) {</span></span>
<span class="line"><span>        // TODO Auto-generated method stub</span></span>
<span class="line"><span>        super.onEnabled(context);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    public void onDisabled(Context context) {</span></span>
<span class="line"><span>        // TODO Auto-generated method stub</span></span>
<span class="line"><span>        super.onDisabled(context);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>TargetActivity.java</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>public class TargetActivity extends Activity {</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    protected void onCreate(Bundle savedInstanceState) {</span></span>
<span class="line"><span>        super.onCreate(savedInstanceState);</span></span>
<span class="line"><span>        setContentView(R.layout.target_activity);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>AndroidManifest.xml</li></ul><p>在 AndroidManifest.xml 中注册 TargetActivity 和 MyAppWidget</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">application</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">activity</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;.TargetActivity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">activity</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    &lt;!-- 注意这里注册了一个 MyAppWidget 接收数据--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">receiver</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;.MyAppWidget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">action</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> android:name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;android.appwidget.action.APPWIDGET_UPDATE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">intent-filter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">meta-data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">            android:name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;android.appwidget.provider&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">            android:resource</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;@xml/appwidget_provider_info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">receiver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">application</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),p=[t];function l(d,r){return i(),s("div",null,p)}const o=n(e,[["render",l],["__file","fcfc830b.html.vue"]]),u=JSON.parse('{"path":"/posts/fcfc830b.html","title":"AppWidget 的使用之 PendingIntent","lang":"zh-CN","frontmatter":{"permalink":"/posts/fcfc830b.html","title":"AppWidget 的使用之 PendingIntent","abbrlink":"fcfc830b","date":"2016-04-24T22:06:06.000Z","updated":"2023-12-30T08:17:02.000Z","isOriginal":true,"description":"这几天学习 AppWidget，很简单的组件却花费了不少功夫，今天对 PendingIntent 的用法做了一些简单的整理。 PendingIntent PandingIntent 就像是一个设计好的处理预案，当达到某个特定条件时，便会调用该 Intent 所指定动作（打开服务，Activity 或者发送广播）。 这里使用该方法在 AppWidget ...","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/fcfc830b.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"AppWidget 的使用之 PendingIntent"}],["meta",{"property":"og:description","content":"这几天学习 AppWidget，很简单的组件却花费了不少功夫，今天对 PendingIntent 的用法做了一些简单的整理。 PendingIntent PandingIntent 就像是一个设计好的处理预案，当达到某个特定条件时，便会调用该 Intent 所指定动作（打开服务，Activity 或者发送广播）。 这里使用该方法在 AppWidget ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T16:00:22.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2016-04-24T22:06:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T16:00:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AppWidget 的使用之 PendingIntent\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-04-24T22:06:06.000Z\\",\\"dateModified\\":\\"2024-05-31T16:00:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1653726847000,"updatedTime":1717171222000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":2},{"name":"JI,XIAOYONG","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":3.32,"words":996},"filePathRelative":"_posts/AppWidget的使用之PendingIntent.md","localizedDate":"2016年4月24日","excerpt":"<p>这几天学习 AppWidget，很简单的组件却花费了不少功夫，今天对 PendingIntent 的用法做了一些简单的整理。</p>\\n<p><strong>PendingIntent</strong></p>\\n<blockquote>\\n<p>PandingIntent 就像是一个设计好的处理预案，当达到某个特定条件时，便会调用该 Intent 所指定动作（打开服务，Activity 或者发送广播）。</p>\\n<p>这里使用该方法在 AppWidget 里面为按钮添加监听事件，当按钮被点击的时候触发相应的动作</p>\\n</blockquote>\\n<p>AppWidget 和应用程序不再同一个进程当中，而是在 HomeScreen 上面执行，所以不能直接为 AppWidget 中的 Button 添加监听事件，需要用 <code>remoteViews.setPendingIntent(R.id.widget_button,pendingIntent);</code>意思是当按下按钮的时候 pendingIntent 中的 Intent 就会执行</p>","autoDesc":true}');export{o as comp,u as data};
