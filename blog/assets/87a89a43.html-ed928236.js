import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as d,a as e,b as n,d as a,e as o}from"./app-431999bc.js";const c={},i={href:"https://v2ex.com/t/633650?p=1",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,'"YYYY-MM-dd"',-1),u=e("code",null,"2019-12-30",-1),h=e("code",null,"2020-12-30",-1),_=e("p",null,"本文来简单分析一下为什么会出现这个情况。",-1),m={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#year",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"y",-1),b=e("code",null,"Y",-1),v=e("code",null,"Week year",-1),f=e("p",null,"先了解几个知识点：",-1),y=e("h1",{id:"week-year",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#week-year","aria-hidden":"true"},"#"),n(" Week year")],-1),g=e("p",null,[e("code",null,"Week year"),n("表示的是"),e("strong",null,"这个周所属的年份"),n("。")],-1),D=e("p",null,[n("A "),e("em",null,"week year"),n(" is in sync with a "),e("code",null,"WEEK_OF_YEAR"),n(" cycle. All weeks between the first and last weeks (inclusive) have the same "),e("em",null,"week year"),n(" value. Therefore, the first and last days of a week year may have different calendar year values.")],-1),j={href:"https://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html#week_year",target:"_blank",rel:"noopener noreferrer"},F=e("h1",{id:"weak-of-year",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#weak-of-year","aria-hidden":"true"},"#"),n(" WEAK_OF_YEAR")],-1),Y=e("p",null,"指的是这一年所有的周，从第01周开始到该年最后一周。",-1),x=e("p",null,"要注意这个周不一定是自然周，所包含的日期也不一定全部都是当年的日期。",-1),S={href:"https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html#WEEK_OF_YEAR",target:"_blank",rel:"noopener noreferrer"},w=e("code",null,"WEEK_OF_YEAR",-1),W={href:"https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html#getFirstDayOfWeek()",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"getFirstDayOfWeek()",-1),M={href:"https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html#getMinimalDaysInFirstWeek()",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"getMinimalDaysInFirstWeek()",-1),O=e("h1",{id:"第01周",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第01周","aria-hidden":"true"},"#"),n(" 第01周")],-1),N={href:"https://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html#week_year",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"getFirstDayOfWeek()",-1),J=e("code",null,"MONDAY",-1),C=e("code",null,"getMinimalDaysInFirstWeek()",-1),T={href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,"第01周有几个相互等效且兼容的描述：",-1),z=e("p",null,"一年中第一个星期四的星期（正式的ISO定义），",-1),V=e("p",null,"1月4日这一周，",-1),G=e("p",null,"起始年份中大部分（四天或以上）的第一周，以及",-1),q=e("p",null,"从12月29日至1月4日的星期一开始的一周。",-1),B={href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"},H=o(`<p>按照JAVA文档中的定义，每年最开始的几天和最后的几天的<code>Week year</code>不一定是当年的年份值，而是受到每年的<em>第01周/最后一周</em>的影响。</p><p>JAVA中判断周主要受到<code>Calendar</code>对象的<code>getFirstDayOfWeek()</code>和<code>getMinimalDaysInFirstWeek()</code>这两个本地值的影响。</p><p>其中：</p><ul><li><code>getFirstDayOfWeek() </code>指定一周的第一天，比如, 美国一周从<code>SUNDAY</code> 开始,法国则是<code>MONDAY</code> 。</li><li><code>getMinimalDaysInFirstWeek()</code> 一年第一周所需最小的天数。比如1表示只要包含第一天就算该年的第一周，而7表示只有完整的一周都在该年才算该年的第一周。</li></ul><p><strong>注意</strong>：真正影响我们格式化日期结果的是<code>SimpleDateFormat</code>中的<code>calendar</code>对象对应的值。</p><p>而通过打印这个<code>simpleDateFormat.calendar</code>，我们看到：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//JDK1.7</span>
minimalDaysInFirstWeek<span class="token operator">:</span><span class="token number">1</span>
firstDayOfWeek<span class="token operator">:</span><span class="token number">1</span> <span class="token comment">//SUNDAY</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以可以得出结论，JAVA<strong>默认只要次年的1月1日在在这个跨年周，那么本周所有日期的<code>Week year</code>都是次年的</strong>（<code>JDK1.7</code>）。</p><h1 id="问题分析" tabindex="-1"><a class="header-anchor" href="#问题分析" aria-hidden="true">#</a> 问题分析</h1><p>有了以上知识，我们再看看<code>2019-12-30</code>以<code>YYYY</code>格式化为什么会出现问题：</p><p>先看一下这些日期对应的星期：</p><table><thead><tr><th>周日</th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th></tr></thead><tbody><tr><td>29</td><td>30</td><td>31</td><td><strong>1</strong></td><td>2</td><td>3</td><td>4</td></tr></tbody></table><p>首先根据JDK默认的<code>第01周</code>的定义，<code>2020-01-01</code>所在的周为<code>2020的第一周</code>，所以<code>2019-12-29到2020-01-04</code>都属于是<code>2020年的第01周</code>。</p><p>再根据<code>YYYY</code>表示的是<code>Week year</code>的结论，可以知道，当使用<code>YYYY</code>格式化时，<code>2019-12-29到2020-01-04</code>都会得到<code>2020</code>。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> calendar <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> simpleDateFormat <span class="token operator">=</span> <span class="token function">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;YYYY yyyy MM dd&quot;</span></span><span class="token punctuation">)</span>
calendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span>
<span class="token function">println</span><span class="token punctuation">(</span>simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">//output</span>
DATE<span class="token operator">:</span><span class="token number">2019</span> <span class="token number">12</span> <span class="token number">29</span>
minimalDaysInFirstWeek<span class="token operator">:</span><span class="token number">1</span>
firstDayOfWeek<span class="token operator">:</span><span class="token number">1</span>
YYYY yyyy MM dd
<span class="token number">2020</span> <span class="token number">2019</span> <span class="token number">12</span> <span class="token number">29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而如果我们把第一周最小天数<code>minimalDaysInFirstWeek</code>改为<code>5</code>天，那么很明显这一周属于<code>2020</code>年的天数（从周日到周一，只有1号到4号4天）不够5天，所以这一周被划归为<code>2019</code>年的第<code>53周</code>，<code>2019-12-29到2020-01-04</code>的<code>week year</code>都是属于<code>2019</code>。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> calendar <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> simpleDateFormat <span class="token operator">=</span> <span class="token function">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;YYYY yyyy MM dd&quot;</span></span><span class="token punctuation">)</span>
calendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span>
simpleDateFormat<span class="token punctuation">.</span>calendar<span class="token punctuation">.</span>minimalDaysInFirstWeek <span class="token operator">=</span> <span class="token number">5</span>
<span class="token function">println</span><span class="token punctuation">(</span>simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">//output</span>
DATE<span class="token operator">:</span><span class="token number">2019</span> <span class="token number">12</span> <span class="token number">29</span>
minimalDaysInFirstWeek<span class="token operator">:</span><span class="token number">5</span>
firstDayOfWeek<span class="token operator">:</span><span class="token number">1</span>
YYYY yyyy MM dd
<span class="token number">2019</span> <span class="token number">2019</span> <span class="token number">12</span> <span class="token number">29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),L={href:"https://blog.csdn.net/bewilderment/article/details/48391717",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"2010-12-26",-1),P=o('<figure><img src="https://img-blog.csdn.net/20150912103324519?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>按照<code>JDK1.7</code>默认算法，一周从周日（<code>2010-12-26</code>）开始，并且当年的1月1日（<code>2011-01-01</code>）所在周为该年第一周，所以<code>2010-12-26到2011-01-01</code>都被划到了<code>2011</code>年的第一周。</p>',2),U={href:"https://en.wikipedia.org/wiki/ISO_8601",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"4",-1),X=o('<p>则很明显<code>2010-12-26</code>属于<code>2010</code>年的<code>51周</code>，而<code>2010-12-27到2011-01-02</code>都属于<code>2010</code>年的第<code>52周</code>（属于2020年的只有2天，不满足第一周的条件）。</p><table><thead><tr><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th><th>周日</th></tr></thead><tbody><tr><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td></tr><tr><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td><td>1</td><td>2</td></tr></tbody></table><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><p>结合以上结论，我们可以看到，在JAVA中（<code>JDK1.7</code>）：</p><ul><li><p><code>“YYYY” </code>表示<code>Week year</code></p></li><li><p>每年最开始的几天和最后的几天的<code>Week year</code>不一定是当年的值，而是受到当年的第一周/最后一周的影响。</p></li><li><p>JAVA周的判断与<code>simpleDateFormat.calendar.minimalDaysInFirstWeek</code>和<code>simpleDateFormat.calendar.firstDayOfWeek</code>有关。</p><p>而这两个值都属于本地化值，<strong>在国内可以简单理解为一年1月1日所在的周就是当年的第一周。</strong></p></li><li><p>我们可以通过修改<code>minimalDaysInFirstWeek</code>和<code>firstDayOfWeek</code>来更改<code>YYYY</code>格式化的值。</p></li></ul><h1 id="附录" tabindex="-1"><a class="header-anchor" href="#附录" aria-hidden="true">#</a> 附录</h1>',6),Z={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#month%EF%BC%89%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},$=e("thead",null,[e("tr",null,[e("th",null,"Letter"),e("th",null,"Date or Time Component"),e("th",null,"Presentation"),e("th",null,"Examples")])],-1),ee=e("td",null,[e("code",null,"G")],-1),ne=e("td",null,"Era designator",-1),te={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#text",target:"_blank",rel:"noopener noreferrer"},ae=e("td",null,[e("code",null,"AD")],-1),oe=e("td",null,[e("code",null,"y")],-1),se=e("td",null,"Year",-1),le={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#year",target:"_blank",rel:"noopener noreferrer"},re=e("td",null,[e("code",null,"1996"),n("; "),e("code",null,"96")],-1),de=e("td",null,[e("code",null,"Y")],-1),ce=e("td",null,"Week year",-1),ie={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#year",target:"_blank",rel:"noopener noreferrer"},pe=e("td",null,[e("code",null,"2009"),n("; "),e("code",null,"09")],-1),ue=e("td",null,[e("code",null,"M")],-1),he=e("td",null,"Month in year",-1),_e={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#month",target:"_blank",rel:"noopener noreferrer"},me=e("td",null,[e("code",null,"July"),n("; "),e("code",null,"Jul"),n("; "),e("code",null,"07")],-1),ke=e("td",null,[e("code",null,"w")],-1),be=e("td",null,"Week in year",-1),ve={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},fe=e("td",null,[e("code",null,"27")],-1),ye=e("td",null,[e("code",null,"W")],-1),ge=e("td",null,"Week in month",-1),De={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},je=e("td",null,[e("code",null,"2")],-1),Fe=e("td",null,[e("code",null,"D")],-1),Ye=e("td",null,"Day in year",-1),xe={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},Se=e("td",null,[e("code",null,"189")],-1),we=e("td",null,[e("code",null,"d")],-1),We=e("td",null,"Day in month",-1),Ae={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},Me=e("td",null,[e("code",null,"10")],-1),Ie=e("td",null,[e("code",null,"F")],-1),Oe=e("td",null,"Day of week in month",-1),Ne={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},Ee=e("td",null,[e("code",null,"2")],-1),Je=e("td",null,[e("code",null,"E")],-1),Ce=e("td",null,"Day name in week",-1),Te={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#text",target:"_blank",rel:"noopener noreferrer"},Ke=e("td",null,[e("code",null,"Tuesday"),n("; "),e("code",null,"Tue")],-1),ze=e("td",null,[e("code",null,"u")],-1),Ve=e("td",null,"Day number of week (1 = Monday, ..., 7 = Sunday)",-1),Ge={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},qe=e("td",null,[e("code",null,"1")],-1),Be=e("td",null,[e("code",null,"a")],-1),He=e("td",null,"Am/pm marker",-1),Le={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#text",target:"_blank",rel:"noopener noreferrer"},Re=e("td",null,[e("code",null,"PM")],-1),Pe=e("td",null,[e("code",null,"H")],-1),Ue=e("td",null,"Hour in day (0-23)",-1),Qe={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},Xe=e("td",null,[e("code",null,"0")],-1),Ze=e("td",null,[e("code",null,"k")],-1),$e=e("td",null,"Hour in day (1-24)",-1),en={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},nn=e("td",null,[e("code",null,"24")],-1),tn=e("td",null,[e("code",null,"K")],-1),an=e("td",null,"Hour in am/pm (0-11)",-1),on={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},sn=e("td",null,[e("code",null,"0")],-1),ln=e("td",null,[e("code",null,"h")],-1),rn=e("td",null,"Hour in am/pm (1-12)",-1),dn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},cn=e("td",null,[e("code",null,"12")],-1),pn=e("td",null,[e("code",null,"m")],-1),un=e("td",null,"Minute in hour",-1),hn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},_n=e("td",null,[e("code",null,"30")],-1),mn=e("td",null,[e("code",null,"s")],-1),kn=e("td",null,"Second in minute",-1),bn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},vn=e("td",null,[e("code",null,"55")],-1),fn=e("td",null,[e("code",null,"S")],-1),yn=e("td",null,"Millisecond",-1),gn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#number",target:"_blank",rel:"noopener noreferrer"},Dn=e("td",null,[e("code",null,"978")],-1),jn=e("td",null,[e("code",null,"z")],-1),Fn=e("td",null,"Time zone",-1),Yn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#timezone",target:"_blank",rel:"noopener noreferrer"},xn=e("td",null,[e("code",null,"Pacific Standard Time"),n("; "),e("code",null,"PST"),n("; "),e("code",null,"GMT-08:00")],-1),Sn=e("td",null,[e("code",null,"Z")],-1),wn=e("td",null,"Time zone",-1),Wn={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#rfc822timezone",target:"_blank",rel:"noopener noreferrer"},An=e("td",null,[e("code",null,"-0800")],-1),Mn=e("td",null,[e("code",null,"X")],-1),In=e("td",null,"Time zone",-1),On={href:"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#iso8601timezone",target:"_blank",rel:"noopener noreferrer"},Nn=e("td",null,[e("code",null,"-08"),n("; "),e("code",null,"-0800"),n("; "),e("code",null,"-08:00")],-1),En=e("h1",{id:"参考资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),n(" 参考资料")],-1),Jn={href:"https://blog.csdn.net/bewilderment/article/details/48391717",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html#week_year",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://www.epochconverter.com/weeknumbers",target:"_blank",rel:"noopener noreferrer"};function Kn(zn,Vn){const t=l("ExternalLinkIcon");return r(),d("div",null,[e("p",null,[n("最近看到一个"),e("a",i,[n("帖子"),a(t)]),n("，表示有人以"),p,n("格式化日期时，在"),u,n("时出现"),h,n("的BUG。")]),_,e("p",null,[n("根据"),e("a",m,[n("JDK文档关于日期的定义"),a(t)]),n("，"),k,n("表示的是我们日常使用的年份，而"),b,n("表示的是"),v,n("。")]),f,y,g,e("blockquote",null,[D,e("p",null,[n("来源："),e("a",j,[n("https://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html#week_year"),a(t)])])]),F,Y,x,e("blockquote",null,[e("p",null,[n("Values calculated for the "),e("a",S,[w,a(t)]),n(" field range from 1 to 53. The first week of a calendar year is the earliest seven day period starting on "),e("a",W,[A,a(t)]),n(" that contains at least "),e("a",M,[I,a(t)]),n(" days from that year.")])]),O,e("p",null,[n("根据这份"),e("a",N,[n("JDK文档"),a(t)]),n("，当 "),E,n(" is "),J,n("（2） and "),C,n(" is 4时，JAVA判断周日期的标准与"),e("a",T,[n("ISO_8601"),a(t)]),n("兼容：")]),e("blockquote",null,[K,z,V,G,q,e("p",null,[n("来源："),e("a",B,[n("https://en.wikipedia.org/wiki/ISO_8601"),a(t)])])]),H,e("p",null,[n("再比如下面这个"),e("a",L,[n("示例"),a(t)]),n("中的"),R,n("。")]),P,e("p",null,[n("但如果按照"),e("a",U,[n("ISO_8601"),a(t)]),n("的标准，一周从周一开始，并且起始年份包含的天数至少要有"),Q,n("天：")]),X,e("p",null,[n("JDK中日期格式化的参数及含义（来自"),e("a",Z,[n("https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#month）："),a(t)])]),e("table",null,[$,e("tbody",null,[e("tr",null,[ee,ne,e("td",null,[e("a",te,[n("Text"),a(t)])]),ae]),e("tr",null,[oe,se,e("td",null,[e("a",le,[n("Year"),a(t)])]),re]),e("tr",null,[de,ce,e("td",null,[e("a",ie,[n("Year"),a(t)])]),pe]),e("tr",null,[ue,he,e("td",null,[e("a",_e,[n("Month"),a(t)])]),me]),e("tr",null,[ke,be,e("td",null,[e("a",ve,[n("Number"),a(t)])]),fe]),e("tr",null,[ye,ge,e("td",null,[e("a",De,[n("Number"),a(t)])]),je]),e("tr",null,[Fe,Ye,e("td",null,[e("a",xe,[n("Number"),a(t)])]),Se]),e("tr",null,[we,We,e("td",null,[e("a",Ae,[n("Number"),a(t)])]),Me]),e("tr",null,[Ie,Oe,e("td",null,[e("a",Ne,[n("Number"),a(t)])]),Ee]),e("tr",null,[Je,Ce,e("td",null,[e("a",Te,[n("Text"),a(t)])]),Ke]),e("tr",null,[ze,Ve,e("td",null,[e("a",Ge,[n("Number"),a(t)])]),qe]),e("tr",null,[Be,He,e("td",null,[e("a",Le,[n("Text"),a(t)])]),Re]),e("tr",null,[Pe,Ue,e("td",null,[e("a",Qe,[n("Number"),a(t)])]),Xe]),e("tr",null,[Ze,$e,e("td",null,[e("a",en,[n("Number"),a(t)])]),nn]),e("tr",null,[tn,an,e("td",null,[e("a",on,[n("Number"),a(t)])]),sn]),e("tr",null,[ln,rn,e("td",null,[e("a",dn,[n("Number"),a(t)])]),cn]),e("tr",null,[pn,un,e("td",null,[e("a",hn,[n("Number"),a(t)])]),_n]),e("tr",null,[mn,kn,e("td",null,[e("a",bn,[n("Number"),a(t)])]),vn]),e("tr",null,[fn,yn,e("td",null,[e("a",gn,[n("Number"),a(t)])]),Dn]),e("tr",null,[jn,Fn,e("td",null,[e("a",Yn,[n("General time zone"),a(t)])]),xn]),e("tr",null,[Sn,wn,e("td",null,[e("a",Wn,[n("RFC 822 time zone"),a(t)])]),An]),e("tr",null,[Mn,In,e("td",null,[e("a",On,[n("ISO 8601 time zone"),a(t)])]),Nn])])]),En,e("p",null,[n("感谢这篇文章，让我推翻了上一次的结论，发现了真正的原因："),e("a",Jn,[n("JAVA中的SimpleDateFormat yyyy和YYYY的区别"),a(t)])]),e("p",null,[e("a",Cn,[n("GregorianCalenda jdk1.7"),a(t)])]),e("p",null,[n("在线显示本周是一年第几周的网站："),e("a",Tn,[n("What's the Current Week Number?"),a(t)])])])}const Bn=s(c,[["render",Kn],["__file","87a89a43.html.vue"]]);export{Bn as default};
