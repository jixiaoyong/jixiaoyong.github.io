const t=JSON.parse('{"key":"v-4e3a0568","path":"/posts/466fbe25.html","title":"数据结构_递归和汉诺塔问题","lang":"zh-CN","frontmatter":{"permalink":"/posts/466fbe25.html","title":"数据结构_递归和汉诺塔问题","tag":"数据结构","abbrlink":"466fbe25","date":"2019-01-02T19:56:25.000Z","description":"前言 本文介绍了递归，归并排序，还有递归在汉诺塔问题上的应用。 排序顺序为 小 → 大 递归 递归是一种在函数内部调用自己的函数。在满足一定条件后可以退出递归。 比如三角数组就是一个简单的递归： 有一组数据，满足这样的条件第n项 = 第n-1项 + n，就称为三角数组，如： 1,2,6,10,15,21...","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/466fbe25.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"数据结构_递归和汉诺塔问题"}],["meta",{"property":"og:description","content":"前言 本文介绍了递归，归并排序，还有递归在汉诺塔问题上的应用。 排序顺序为 小 → 大 递归 递归是一种在函数内部调用自己的函数。在满足一定条件后可以退出递归。 比如三角数组就是一个简单的递归： 有一组数据，满足这样的条件第n项 = 第n-1项 + n，就称为三角数组，如： 1,2,6,10,15,21..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-29T17:56:55.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2019-01-02T19:56:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-29T17:56:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构_递归和汉诺塔问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-02T19:56:25.000Z\\",\\"dateModified\\":\\"2023-12-29T17:56:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1703872615000,"updatedTime":1703872615000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":4.56,"words":1367},"filePathRelative":"_posts/数据结构_递归和汉诺塔问题.md","localizedDate":"2019年1月3日","excerpt":"<h1> 前言</h1>\\n<p>本文介绍了递归，归并排序，还有递归在汉诺塔问题上的应用。</p>\\n<p>排序顺序为 <code>小 → 大</code></p>\\n<h1> 递归</h1>\\n<p>递归是一种在函数内部调用自己的函数。在满足一定条件后可以退出递归。</p>\\n<p>比如三角数组就是一个简单的递归：</p>\\n<blockquote>\\n<p>有一组数据，满足这样的条件<code>第n项</code> = <code>第n-1项</code> + <code>n</code>，就称为三角数组，如：</p>\\n<p><code>1,2,6,10,15,21...</code></p>\\n</blockquote>","autoDesc":true}');export{t as data};
