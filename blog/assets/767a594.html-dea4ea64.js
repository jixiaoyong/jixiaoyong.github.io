const e=JSON.parse('{"key":"v-415ca167","path":"/posts/767a594.html","title":"Flutter Expanded VS Flexible","lang":"zh-CN","frontmatter":{"permalink":"/posts/767a594.html","title":"Flutter Expanded VS Flexible","abbrlink":"767a594","date":"2022-05-11T03:49:12.000Z","updated":"2023-12-30T08:17:02.000Z","description":"在 Flutter 中，当需要填充容器（Row, Column, or Flex）剩余空间的时候，可以使用Expanded或Flexible，本文对这二者的差异做一分析。 分析 Expanded 比较容易理解，他会强制 child 改变大小，占据容器的剩余空间，如果有多个Expanded的话，会按照他们的 flex 占比来分配每个 child 可以占据的空间大小。 Flexible 稍微特殊一些，有时候看起来似乎他的 child 占据的大小既不全是父布局的剩余空间，也不全是刚刚包裹 child 内容的大小。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/767a594.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Flutter Expanded VS Flexible"}],["meta",{"property":"og:description","content":"在 Flutter 中，当需要填充容器（Row, Column, or Flex）剩余空间的时候，可以使用Expanded或Flexible，本文对这二者的差异做一分析。 分析 Expanded 比较容易理解，他会强制 child 改变大小，占据容器的剩余空间，如果有多个Expanded的话，会按照他们的 flex 占比来分配每个 child 可以占据的空间大小。 Flexible 稍微特殊一些，有时候看起来似乎他的 child 占据的大小既不全是父布局的剩余空间，也不全是刚刚包裹 child 内容的大小。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-31T23:31:38.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2022-05-11T03:49:12.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-31T23:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter Expanded VS Flexible\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-11T03:49:12.000Z\\",\\"dateModified\\":\\"2023-12-31T23:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1704065498000,"updatedTime":1704065498000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":2.26,"words":678},"filePathRelative":"_posts/Flutter-Expanded-VS-Flexible.md","localizedDate":"2022年5月11日","excerpt":"<p>在 Flutter 中，当需要填充容器（<code>Row</code>, <code>Column</code>, or <code>Flex</code>）剩余空间的时候，可以使用<code>Expanded</code>或<code>Flexible</code>，本文对这二者的差异做一分析。</p>\\n<h1> 分析</h1>\\n<p><code>Expanded</code> 比较容易理解，他会强制 child 改变大小，占据容器的剩余空间，如果有多个<code>Expanded</code>的话，会按照他们的 flex 占比来分配每个 child 可以占据的空间大小。</p>\\n<p><code>Flexible</code> 稍微特殊一些，有时候看起来似乎他的 child 占据的大小既不全是父布局的剩余空间，也不全是刚刚包裹 child 内容的大小。</p>","autoDesc":true}');export{e as data};
