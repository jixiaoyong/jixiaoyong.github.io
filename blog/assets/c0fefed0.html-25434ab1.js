import{_ as a,r as t,o as e,c as p,a as n,b as o,d as c,e as i}from"./app-77b42b64.js";const l={},u=i(`<p>Android 事件分发，指手指点击屏幕后，从 Activity、ViewGroup 到 View 的一系列过程。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Android 系统的窗口机制如下图：</p><p>Activity 内有一个 Window 对象，其实现类是 PhoneWindow；</p><p>DecorView 为顶层 View，DecorView 是一个 FrameLayout，其中有 TitleView 和 ContentView；</p><figure><img src="https://jixiaoyong.github.io/images/blog/2018-04/AndroidDispatchTouchEvent.png" alt="Android 系统窗口管理机制" tabindex="0" loading="lazy"><figcaption>Android 系统窗口管理机制</figcaption></figure><p>TitleView 为标题栏，ContentView 就是平时在 Activity 的 onCreate() 方法中设置的视图，TitleView 可以用<code>this.requestWindowFeature(Window.FEATURE_NO_TITLE);</code>隐藏掉，但是必须注意要在 setContentView() 之前，原因如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">initWindowDecorActionBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="点击事件-activity-viewgroup" tabindex="-1"><a class="header-anchor" href="#点击事件-activity-viewgroup" aria-hidden="true">#</a> 点击事件 Activity --&gt; ViewGroup</h2><p>点击事件发生后，首先被调用的是<code>Activity.dispatchTouchEvent()</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">onUserInteraction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">superDispatchTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，其内部先调用了<code>getWindow().superDispatchTouchEvent(ev)</code>这个方法，getWindow() 返回的 mWindow 是 PhoneWindow 的对象。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhoneWindow</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> window<span class="token punctuation">,</span> activityConfigCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再看看 PhoneWindow.superDispatchTouchEvent() 方法，显然又调用了 DecorView 的 superDispatchTouchEvent() 方法，在该方法中，调用了 FrameLayout.dispatchKeyEvent(event)，此时<strong>点击事件从 Activity 转到了 ViewGroup 中</strong>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//PhoneWindow</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">superDispatchKeyEvent</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> mDecor<span class="token punctuation">.</span><span class="token function">superDispatchKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token comment">//DecorView extends FrameLayout</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">superDispatchKeyEvent</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Give priority to closing action modes if applicable.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getKeyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span><span class="token constant">KEYCODE_BACK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> action <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Back cancels action modes first.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPrimaryActionMode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_UP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPrimaryActionMode<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispatchKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="点击事件-viewgroup-view" tabindex="-1"><a class="header-anchor" href="#点击事件-viewgroup-view" aria-hidden="true">#</a> 点击事件 ViewGroup --&gt; View</h2><p>ViewGroup 与事件分发的方法有三个：</p><ul><li><code>dispatchTouchEvent()</code> 分发事件，每次都会被调用</li><li><code>onInterceptTouchEvent()</code> 拦截事件，如果当前 ViewGroup 已经决定拦截事件，那么不会再调用</li><li><code>onTouchEvent()</code> 处理点击事件，如果设置了<code>mOnTouchListener</code>的话，则不会回调本方法</li></ul><p>这三个主要方法关系如下（伪代码，来自《Android 开发艺术探索》）：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">//每次点击事件回调该方法</span>
<span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//viewGroup 会回调该方法，确认是否拦截点击事件</span>
        result <span class="token operator">=</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token comment">//对点击事件进行处理</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 ViewGroup.dispatchTouchEvent() 被调用后，会通过一系列条件判断是由 ViewGroup 拦截该事件，还是由子 View 消耗该事件。</p><p>主要流程分为两部分</p><p><strong>1.检查是否需要拦截</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// http://androidxref.com/9.0.0_r3/xref/frameworks/base/core/java/android/view/ViewGroup.java line2567-2582</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token comment">// Check for interception.</span>
            <span class="token keyword">final</span> <span class="token keyword">boolean</span> intercepted<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>actionMasked <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span>
                    <span class="token operator">||</span> mFirstTouchTarget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> disallowIntercept <span class="token operator">=</span> <span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> <span class="token constant">FLAG_DISALLOW_INTERCEPT</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disallowIntercept<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    intercepted <span class="token operator">=</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在这里调用了 onInterceptTouchEvent() 方法，如果已经拦截了</span>
                    ev<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// restore action in case it was changed</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    intercepted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// There are no touch targets and this action is not an initial down</span>
                <span class="token comment">// so this view group continues to intercept touches.</span>
                intercepted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">isFromSource</span><span class="token punctuation">(</span><span class="token class-name">InputDevice</span><span class="token punctuation">.</span><span class="token constant">SOURCE_MOUSE</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> ev<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span>
                <span class="token operator">&amp;&amp;</span> ev<span class="token punctuation">.</span><span class="token function">isButtonPressed</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">BUTTON_PRIMARY</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token function">isOnScrollbarThumb</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>每次 ACTION_DOWN 事件都需要调用<code>onInterceptTouchEvent()</code>方法判断是否需要拦截</li><li>其他 MotionEvent 事件，如果有能处理点击事件的子 View（<code>mFirstTouchTarget != null</code>）且<code>disallowIntercept</code>为 false 也需要调用<code>onInterceptTouchEvent()</code>方法判断是否需要拦截，否则不需要拦截</li><li>其余情况都需要拦截（没有可以处理点击事件的子 View，并且不是 ACTION_DOWN 事件）</li></ul><p>如果 ViewGroup 判断要拦截该事件，则会调用<code>dispatchTransformedTouchEvent()</code>（后面会再讲到）通过他调用继承自 View 的<code>dispatchTouchEvent(MotionEvent event)</code>方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">// Dispatch to touch targets.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mFirstTouchTarget <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// No touch targets so treat this as an ordinary view.</span>
                handled <span class="token operator">=</span> <span class="token function">dispatchTransformedTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span> canceled<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                        <span class="token class-name">TouchTarget</span><span class="token punctuation">.</span><span class="token constant">ALL_POINTER_IDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>否则就需要遍历其子 View</p><p><strong>2.遍历 ViewGroup 的所有子 View，寻找一个可以处理点击事件的子 View</strong></p><ul><li><code>dispatchTransformedTouchEvent()</code> 调用了子 View 的<code>dispatchTouchEvent()</code></li><li><code>addTouchTarget()</code> 对<code>mFirstTouchTarget </code>进行更新</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 1. Check for interception.判断是否需要拦截</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> intercepted<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actionMasked <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span>
                <span class="token operator">||</span> mFirstTouchTarget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//mFirstTouchTarget 表示能处理点击事件的子 View</span>
            <span class="token comment">//FLAG_DISALLOW_INTERCEPT 每次 ACTION_DOWN 都会被重置</span>
            <span class="token keyword">final</span> <span class="token keyword">boolean</span> disallowIntercept <span class="token operator">=</span> <span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> <span class="token constant">FLAG_DISALLOW_INTERCEPT</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disallowIntercept<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                intercepted <span class="token operator">=</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用拦截方法</span>
                ev<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// restore action in case it was changed</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                intercepted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// There are no touch targets and this action is not an initial down</span>
            <span class="token comment">// so this view group continues to intercept touches.</span>
            intercepted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    	<span class="token comment">//2.遍历子 View，寻找可以处理点击事件的子 View</span>
    	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>canceled <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>intercepted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       		 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> childrenCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchTransformedTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> child<span class="token punctuation">,</span> idBitsToAssign<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                     <span class="token comment">// Child wants to receive touch within its bounds.</span>
                     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                     newTouchTarget <span class="token operator">=</span> <span class="token function">addTouchTarget</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> idBitsToAssign<span class="token punctuation">)</span><span class="token punctuation">;</span>
                     alreadyDispatchedToNewTouchTarget <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                     <span class="token keyword">break</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
        	 <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dispatchTransformedTouchEvent() 方法如下，由于<code>child != null</code>其内部调用<code>child.dispatchTouchEvent(event)</code>方法，如此循环直到子 View 是一个 View（单就 ViewGroup 和 View 而论）即<strong>将点击事件从 ViewGroup 分发到了 View</strong>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTransformedTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">,</span> <span class="token keyword">boolean</span> cancel<span class="token punctuation">,</span>
            <span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">int</span> desiredPointerIdBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        handled <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        handled <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有子 View 可以处理点击事件，在<code>addTouchTarget()</code>方法内部对<code>mFirstTouchTarget</code>进行更新</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">TouchTarget</span> <span class="token function">addTouchTarget</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">int</span> pointerIdBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">TouchTarget</span> target <span class="token operator">=</span> <span class="token class-name">TouchTarget</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> pointerIdBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>next <span class="token operator">=</span> mFirstTouchTarget<span class="token punctuation">;</span>
    mFirstTouchTarget <span class="token operator">=</span> target<span class="token punctuation">;</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="点击事件-view-内部" tabindex="-1"><a class="header-anchor" href="#点击事件-view-内部" aria-hidden="true">#</a> 点击事件 View 内部</h2><p>View 的点击事件分发主要涉及到两个方法：</p><ul><li><code>dispatchTouchEvent()</code></li><li><code>onTouchEvent()</code></li></ul><p>其点击事件分发用伪代码表示如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>mListenerInfo<span class="token punctuation">.</span>mOnTouchListener<span class="token punctuation">.</span><span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可见 View 的 dispatchTouchEvent() 方法中，如果 View 注册了 OnTouchListener 则会先执行<code>mOnTouchListener.onTouch()</code>方法，如果该方法返回 false 才会执行<code>onTouchEvent()</code>。</p><p>在看 onTouchEvent() 方法：</p><ul><li>如果 View 处于<strong>不可用状态</strong>下，也会消耗点击事件，只不过没有反应</li><li>如果注册了 OnClickListener 会在 ACTION_UP 的时候调用<code>mOnClickListener.onClick(this)</code></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">CLICKABLE</span><span class="token operator">&amp;&amp;</span><span class="token constant">LONG_CLICKABLE</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//LONG_CLICKABLE 默认为 false，CLICKABLE、LONG_CLICKABLE 会在设置点击事件时被设置为 true</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_UP</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果注册了 OnClickListener 则会调用其 onClick() 方法</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    mListenerInfo<span class="token punctuation">.</span>mOnClickListener<span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>整个 Android 的时间分发始于 Activity，经过 PhoneWindow、DecorView 到达 ViewGroup，再逐层分发到 View 中。</p><p>如果底层没有处理点击事件，则又一层层向上返回，直到最顶层消耗掉点击事件。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2><p>《Android 开发艺术探索》</p>`,49),d={href:"http://androidxref.com",target:"_blank",rel:"noopener noreferrer"};function k(r,v){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",d,[o("Android 源代码"),c(s)])])])}const b=a(l,[["render",k],["__file","c0fefed0.html.vue"]]);export{b as default};
