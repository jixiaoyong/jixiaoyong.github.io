const n=JSON.parse('{"key":"v-2ea04aec","path":"/posts/375fcf66.html","title":"Java实现AES加密解密应用","lang":"zh-CN","frontmatter":{"permalink":"/posts/375fcf66.html","title":"Java实现AES加密解密应用","abbrlink":"375fcf66","date":"2018-01-22T23:51:19.000Z","tag":"加密","description":"简介 最近手机中涉及到用户账户密码保存的问题，选用AES加密算法进行加密后，再通过SharedPreferences保存在手机端。 本文主要介绍AES的加密、解密用法。 代码 初始化秘钥 private static final String AES = \\"AES\\"; private static final String PASSWPRD = \\"123456\\"; public static SecretKeySpec initKey(){ SecretKeySpec key = null; try { KeyGenerator kg = KeyGenerator.getInstance(AES); kg.init(128,new SecureRandom(PASSWPRD.getBytes()));//通过这种算法，每次生成的key都是一样的 //也可以kg.init(128),这样每次生成的key都不一样 SecretKey securityKey = kg.generateKey(); byte[] encodedKey = securityKey.getEncoded(); key = new SecretKeySpec(encodedKey, AES);//AES也可以替换为\\"AES/CBC/PKCS5PADDING\\" } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return key; }","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/375fcf66.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Java实现AES加密解密应用"}],["meta",{"property":"og:description","content":"简介 最近手机中涉及到用户账户密码保存的问题，选用AES加密算法进行加密后，再通过SharedPreferences保存在手机端。 本文主要介绍AES的加密、解密用法。 代码 初始化秘钥 private static final String AES = \\"AES\\"; private static final String PASSWPRD = \\"123456\\"; public static SecretKeySpec initKey(){ SecretKeySpec key = null; try { KeyGenerator kg = KeyGenerator.getInstance(AES); kg.init(128,new SecureRandom(PASSWPRD.getBytes()));//通过这种算法，每次生成的key都是一样的 //也可以kg.init(128),这样每次生成的key都不一样 SecretKey securityKey = kg.generateKey(); byte[] encodedKey = securityKey.getEncoded(); key = new SecretKeySpec(encodedKey, AES);//AES也可以替换为\\"AES/CBC/PKCS5PADDING\\" } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return key; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-15T10:32:39.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"加密"}],["meta",{"property":"article:published_time","content":"2018-01-22T23:51:19.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-15T10:32:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java实现AES加密解密应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-01-22T23:51:19.000Z\\",\\"dateModified\\":\\"2023-12-15T10:32:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1702636359000,"updatedTime":1702636359000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":1.58,"words":475},"filePathRelative":"_posts/Java实现AES加密解密.md","localizedDate":"2018年1月23日","excerpt":"<h1> 简介</h1>\\n<p>最近手机中涉及到用户账户密码保存的问题，选用AES加密算法进行加密后，再通过SharedPreferences保存在手机端。</p>\\n<p>本文主要介绍AES的加密、解密用法。</p>\\n<h1> 代码</h1>\\n<p>初始化秘钥</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> <span class=\\"token constant\\">AES</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"AES\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> <span class=\\"token constant\\">PASSWPRD</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"123456\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">SecretKeySpec</span> <span class=\\"token function\\">initKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">SecretKeySpec</span> key <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n\\n            <span class=\\"token class-name\\">KeyGenerator</span> kg <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">KeyGenerator</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">AES</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            kg<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">128</span><span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SecureRandom</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">PASSWPRD</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBytes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//通过这种算法，每次生成的key都是一样的</span>\\n          <span class=\\"token comment\\">//也可以kg.init(128),这样每次生成的key都不一样</span>\\n            <span class=\\"token class-name\\">SecretKey</span> securityKey <span class=\\"token operator\\">=</span> kg<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">generateKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">byte</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> encodedKey <span class=\\"token operator\\">=</span> securityKey<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getEncoded</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            key <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SecretKeySpec</span><span class=\\"token punctuation\\">(</span>encodedKey<span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">AES</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//AES也可以替换为\\"AES/CBC/PKCS5PADDING\\"</span>\\n\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">NoSuchAlgorithmException</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">return</span> key<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
