import{_ as s,r as t,o as e,c as p,a as n,b as o,d as c,e as i}from"./app-4152d5c1.js";const l={},u=i(`<h3 id="layout-weight" tabindex="-1"><a class="header-anchor" href="#layout-weight" aria-hidden="true">#</a> layout_weight</h3><p>layout_weight 重要性，默认的是 0,0 等级最高，要显示，数字越大重要性越低。</p><p>例：a，b 的宽度为 0，layout_weight 分别为 1、2，则 a，b 宽度分别为父容器的 2/3、1/3。</p><h3 id="pendingintent" tabindex="-1"><a class="header-anchor" href="#pendingintent" aria-hidden="true">#</a> PendingIntent</h3><p>PendingIntent 是封装后的 intent，有 intent 执行所需的 context，所以即使要执行 intent 的 activity 已经消失或者还没生成，其他 activity 依然可以通过 PendingIntent 执行 intent。</p><blockquote><p>PendingIntent is a description of an Intent and target action to perform with it. Instances of this class are created with <code>getActivity(Context, int, Intent, int)</code>, <code>getActivities(Context, int, Intent[], int)</code>, <code>getBroadcast(Context, int, Intent, int)</code>, and <code>getService(Context, int, Intent, int)</code>; the returned object can be handed to other applications so that they can perform the action you described on your behalf at a later time.</p></blockquote><p>也就是把自己要执行的 intent 和执行所需的 context 封装后给别人，请别人在适当的时候执行。</p><h3 id="android-模拟器访问电脑-localhost" tabindex="-1"><a class="header-anchor" href="#android-模拟器访问电脑-localhost" aria-hidden="true">#</a> android 模拟器访问电脑 localhost</h3><p>电脑<code>localhost</code>或者<code>127.0.0.1</code>访问本地网址。</p><p>模拟器访问<code>localhost</code>会默认访问手机的本地网址，要访问电脑的本地网址则需要访问<code>10.0.2.2:8080</code>，记得加上对应的端口。</p><h3 id="获取屏幕画面" tabindex="-1"><a class="header-anchor" href="#获取屏幕画面" aria-hidden="true">#</a> 获取屏幕画面</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">View</span> decor <span class="token operator">=</span> <span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
decor<span class="token punctuation">.</span><span class="token function">setDrawingCacheEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>decor<span class="token punctuation">.</span><span class="token function">getDrawingCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取网络信息-请求网络" tabindex="-1"><a class="header-anchor" href="#获取网络信息-请求网络" aria-hidden="true">#</a> 获取网络信息，请求网络</h3><p>需要请求权限</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.INTERNET<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>java 代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">chackNetWork</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> isNetAvailable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">ConnectivityManager</span> manager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConnectivityManager</span><span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">CONNECTIVITY_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>manager<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isNetAvailable <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNetAvailable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;open network&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            intent<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token constant">ACTION_NETWORK_OPERATOR_SETTINGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="livedata" tabindex="-1"><a class="header-anchor" href="#livedata" aria-hidden="true">#</a> LiveData</h2><p><code>LiveData</code>可以在数据有变化的时候调用订阅者并执行指定方法。</p><p><code>Transformations</code>有两个转化<code>LiveData</code>的方法：<code>map()</code>和<code>switchMap()</code>。</p><p><code>map()</code>可以将一个<code>LiveData</code>经过处理转化为另外一个<code>LiveData</code>。</p><p>而<code>switchMap()</code>则可以根据不同的需要切换不同的<code>LiveData</code>。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> live <span class="token operator">=</span> MutableLiveData<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> d <span class="token operator">:</span> LiveData<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>live<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token string-literal singleline"><span class="token string">&quot;this is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">val</span> e <span class="token operator">=</span> <span class="token function">switchMap</span><span class="token punctuation">(</span>live<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token label symbol">@switchMap</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token string-literal singleline"><span class="token string">&quot;a&quot;</span></span> <span class="token operator">-&gt;</span> MutableLiveData<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">)</span>
        <span class="token string-literal singleline"><span class="token string">&quot;b&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token function">MutableLiveData</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;b&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token function">MutableLiveData</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;else&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，<code>LiveData</code>的子类<code>MediatorLiveData</code>可以添加多个监听项，每个项目改变都会回调对应的<code>onChange()</code>方法。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> mediatorLiveData <span class="token operator">=</span> MediatorLiveData<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

mediatorLiveData<span class="token punctuation">.</span><span class="token function">addSource</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">update</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span> e<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

mediatorLiveData<span class="token punctuation">.</span><span class="token function">addSource</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">update</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>value<span class="token punctuation">,</span> it<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">update</span><span class="token punctuation">(</span>a<span class="token operator">:</span> String<span class="token operator">?</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">,</span> b<span class="token operator">:</span> String<span class="token operator">?</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//do sth</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,26),r={href:"https://www.jianshu.com/p/dab2ee97d680",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const a=t("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",r,[o("【译】LiveData 使用详解"),c(a)])])])}const g=s(l,[["render",d],["__file","aacd75ab.html.vue"]]);export{g as default};
