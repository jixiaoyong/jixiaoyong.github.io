import{_ as s,c as e,a,o as n}from"./app-DQAvLgyB.js";const t={};function l(h,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h2 id="问题描述-webview-在-fragment-中不显示" tabindex="-1"><a class="header-anchor" href="#问题描述-webview-在-fragment-中不显示"><span>问题描述：WebView 在 fragment 中不显示</span></a></h2><p>解决代码如下：</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//kotlin 代码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">webView.webViewClient </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">WebViewClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            override</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> shouldOverrideUrlLoading</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(view: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">WebView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?, url: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?): </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                view</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">loadUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此代码同样强制在 webview 中打开对应的网页</p>`,4)]))}const r=s(t,[["render",l]]),k=JSON.parse('{"path":"/posts/b35fe0f7.html","title":"Android 中 WebView 使用的一些问题","lang":"zh-CN","frontmatter":{"permalink":"/posts/b35fe0f7.html","title":"Android 中 WebView 使用的一些问题","tag":"android","abbrlink":"b35fe0f7","date":"2018-02-07T16:11:13.000Z","updated":"2023-12-30T08:17:02.000Z","isOriginal":true,"description":"问题描述：WebView 在 fragment 中不显示 解决代码如下： 此代码同样强制在 webview 中打开对应的网页","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/b35fe0f7.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android 中 WebView 使用的一些问题"}],["meta",{"property":"og:description","content":"问题描述：WebView 在 fragment 中不显示 解决代码如下： 此代码同样强制在 webview 中打开对应的网页"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-04T03:36:59.000Z"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:published_time","content":"2018-02-07T16:11:13.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-04T03:36:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 中 WebView 使用的一些问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-07T16:11:13.000Z\\",\\"dateModified\\":\\"2024-06-04T03:36:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"git":{"createdTime":1653726847000,"updatedTime":1717472219000,"contributors":[{"name":"jixiaoyong","username":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":4,"url":"https://github.com/jixiaoyong"},{"name":"JI,XIAOYONG","username":"","email":"jixiaoyong1995@gmail.com","commits":2}]},"readingTime":{"minutes":0.29,"words":87},"filePathRelative":"_posts/Android中WebView使用的一些问题.md","localizedDate":"2018年2月7日","excerpt":"<h2>问题描述：WebView 在 fragment 中不显示</h2>\\n<p>解决代码如下：</p>\\n<div class=\\"language-kotlin line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"kotlin\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//kotlin 代码</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">webView.webViewClient </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> object</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> : </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">WebViewClient</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">            override</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> fun</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> shouldOverrideUrlLoading</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(view: </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">WebView</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?, url: </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">String</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">?): </span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">Boolean</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">                view</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">!!</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">loadUrl</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(url)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">                return</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> true</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">            }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">        }</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,k as data};
