const e=JSON.parse('{"key":"v-defabfdc","path":"/posts/a2863875.html","title":"Android运行时权限","lang":"zh-CN","frontmatter":{"permalink":"/posts/a2863875.html","title":"Android运行时权限","abbrlink":"a2863875","date":"2018-11-25T13:10:08.000Z","tag":"android","description":"简介 本文介绍了Android运行时权限的一些处理流程。 Android运行时权限是Android6之后出现的处理权限的新方式，此前开发者只需要应用需要的权限在AndroidManifest.xml文件中声明即可，现在则需要在使用到对应权限时检测是否有该权限并作出相应处理。 正文 一般流程 在AndroidManifest.xml中声明所需权限 在使用之前检查是否有该权限checkSelfPermission(),如果有则继续相应操作 如果没有权限则检测是否需要向用户解释为什么需要该权限ActivityCompat.shouldShowRequestPermissionRationale()，再决定如何申请权限requestPermissions() 需要说明的是，shouldShowRequestPermissionRationale()在第一次申请该权限时会返回false，第二次申请时返回true； 但是如果用户选择了不再提醒 则会一直返回false。所以如果判断当前并非第一次申请该权限，并且返回结果为false，就说明用户选择了不再提示，一般就需要提示用户到设置中开启对应权限。 申请权限的结果在onRequestPermissionsResult()方法中返回，根据用户对权限的处理结果决定接下来的操作","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/a2863875.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android运行时权限"}],["meta",{"property":"og:description","content":"简介 本文介绍了Android运行时权限的一些处理流程。 Android运行时权限是Android6之后出现的处理权限的新方式，此前开发者只需要应用需要的权限在AndroidManifest.xml文件中声明即可，现在则需要在使用到对应权限时检测是否有该权限并作出相应处理。 正文 一般流程 在AndroidManifest.xml中声明所需权限 在使用之前检查是否有该权限checkSelfPermission(),如果有则继续相应操作 如果没有权限则检测是否需要向用户解释为什么需要该权限ActivityCompat.shouldShowRequestPermissionRationale()，再决定如何申请权限requestPermissions() 需要说明的是，shouldShowRequestPermissionRationale()在第一次申请该权限时会返回false，第二次申请时返回true； 但是如果用户选择了不再提醒 则会一直返回false。所以如果判断当前并非第一次申请该权限，并且返回结果为false，就说明用户选择了不再提示，一般就需要提示用户到设置中开启对应权限。 申请权限的结果在onRequestPermissionsResult()方法中返回，根据用户对权限的处理结果决定接下来的操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-27T09:32:48.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:published_time","content":"2018-11-25T13:10:08.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-27T09:32:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android运行时权限\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-25T13:10:08.000Z\\",\\"dateModified\\":\\"2023-07-27T09:32:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一般流程","slug":"一般流程","link":"#一般流程","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1690450368000,"updatedTime":1690450368000,"contributors":[{"name":"JI,XIAOYONG","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":2.49,"words":746},"filePathRelative":"_posts/Android运行时权限.md","localizedDate":"2018年11月25日","excerpt":"<h1> 简介</h1>\\n<p>本文介绍了Android运行时权限的一些处理流程。</p>\\n<p>Android运行时权限是Android6之后出现的处理权限的新方式，此前开发者只需要应用需要的权限在AndroidManifest.xml文件中声明即可，现在则需要在使用到对应权限时检测是否有该权限并作出相应处理。</p>\\n<h1> 正文</h1>\\n<h2> 一般流程</h2>\\n<ol>\\n<li>\\n<p>在<code>AndroidManifest.xml</code>中声明所需权限</p>\\n</li>\\n<li>\\n<p>在使用之前检查是否有该权限<code>checkSelfPermission()</code>,如果有则继续相应操作</p>\\n</li>\\n<li>\\n<p>如果没有权限则检测是否需要向用户解释为什么需要该权限<code>ActivityCompat.shouldShowRequestPermissionRationale()</code>，再决定如何申请权限<code>requestPermissions()</code></p>\\n<blockquote>\\n<p>需要说明的是，shouldShowRequestPermissionRationale()在第一次申请该权限时会返回false，第二次申请时返回true；</p>\\n<p>但是如果用户选择了<em>不再提醒</em> 则会一直返回false。所以如果判断当前并非第一次申请该权限，并且返回结果为false，就说明用户选择了不再提示，一般就需要提示用户到设置中开启对应权限。</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>申请权限的结果在<code>onRequestPermissionsResult()</code>方法中返回，根据用户对权限的处理结果决定接下来的操作</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
