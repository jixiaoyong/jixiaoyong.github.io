const e=JSON.parse('{"key":"v-e05d7056","path":"/posts/db62c118.html","title":"Dart event loop","lang":"zh-CN","frontmatter":{"permalink":"/posts/db62c118.html","title":"Dart event loop","date":"2022-06-11T18:25:29.000Z","abbrlink":"db62c118","tag":"dart","description":"本文基于Dart 2.17 Dart App中所有的代码都在一个isolate中运行（各个isolate之间的代码运行时是隔离的），一个isolate有自己的heap，维持有一个消息队列event_loop，处理两种消息： event queue 执行用户点击、屏幕刷新、绘制，一般的Future、IO、Stream流等，每次执行完毕都会先检查执行micro task queue中的任务，直到其为空再执行下一个event queue microTask queue 优先执行，一般执行跑完即弃的小任务，如Dart内部的微任务","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/db62c118.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Dart event loop"}],["meta",{"property":"og:description","content":"本文基于Dart 2.17 Dart App中所有的代码都在一个isolate中运行（各个isolate之间的代码运行时是隔离的），一个isolate有自己的heap，维持有一个消息队列event_loop，处理两种消息： event queue 执行用户点击、屏幕刷新、绘制，一般的Future、IO、Stream流等，每次执行完毕都会先检查执行micro task queue中的任务，直到其为空再执行下一个event queue microTask queue 优先执行，一般执行跑完即弃的小任务，如Dart内部的微任务"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-27T12:12:46.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"dart"}],["meta",{"property":"article:published_time","content":"2022-06-11T18:25:29.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-27T12:12:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dart event loop\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-11T18:25:29.000Z\\",\\"dateModified\\":\\"2023-07-27T12:12:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"代码分析","slug":"代码分析","link":"#代码分析","children":[{"level":3,"title":"_RootZone._scheduleAsyncCallback","slug":"rootzone-scheduleasynccallback","link":"#rootzone-scheduleasynccallback","children":[]},{"level":3,"title":"_RootZone._startMicrotaskLoop","slug":"rootzone-startmicrotaskloop","link":"#rootzone-startmicrotaskloop","children":[]},{"level":3,"title":"_AsyncRun._scheduleImmediate","slug":"asyncrun-scheduleimmediate","link":"#asyncrun-scheduleimmediate","children":[]},{"level":3,"title":"_ScheduleImmediateClosure","slug":"scheduleimmediateclosure","link":"#scheduleimmediateclosure","children":[]},{"level":3,"title":"_pendingImmediateCallback","slug":"pendingimmediatecallback","link":"#pendingimmediatecallback","children":[]}]},{"level":2,"title":"代码分析","slug":"代码分析-1","link":"#代码分析-1","children":[{"level":3,"title":"Future.then","slug":"future-then","link":"#future-then","children":[]}]},{"level":2,"title":"Timer","slug":"timer","link":"#timer","children":[{"level":3,"title":"创建Timer","slug":"创建timer","link":"#创建timer","children":[]},{"level":3,"title":"timer._enqueue","slug":"timer-enqueue","link":"#timer-enqueue","children":[]}]}],"git":{"createdTime":1690459966000,"updatedTime":1690459966000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":18.55,"words":5565},"filePathRelative":"_posts/DartEventLoop.md","localizedDate":"2022年6月12日","excerpt":"<blockquote>\\n<p>本文基于Dart 2.17</p>\\n</blockquote>\\n<br>\\n<p>Dart App中所有的代码都在一个isolate中运行（各个isolate之间的代码运行时是隔离的），一个isolate有自己的heap，维持有一个消息队列event_loop，处理两种消息：</p>\\n<ol>\\n<li><code>event queue</code> 执行用户点击、屏幕刷新、绘制，一般的Future、IO、Stream流等，每次执行完毕都会先检查执行micro task queue中的任务，直到其为空再执行下一个event queue</li>\\n<li><code>microTask queue</code> 优先执行，一般执行跑完即弃的小任务，如Dart内部的微任务</li>\\n</ol>","autoDesc":true}');export{e as data};
