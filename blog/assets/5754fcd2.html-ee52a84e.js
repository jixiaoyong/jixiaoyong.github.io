import{_ as o,r as p,o as c,c as l,a as n,b as a,d as e,e as t}from"./app-8501752f.js";const i={},r=t('<p>近期有一个实现定时启动 APP 提醒用户的需求，一番比较之后觉得用闹钟<code>AlarmManager</code>实现比较合适，本文是对此过程的梳理，属于比较基础性的内容。</p><h2 id="需求" tabindex="-1"><a class="header-anchor" href="#需求" aria-hidden="true">#</a> 需求</h2><p>需求需要实现</p><blockquote><p>&quot;每天在指定时间范围内，循环提示用户直到满足指定的条件&quot;</p></blockquote><p>拆分需求：</p><ol><li>每天都要提醒</li><li>在时间范围内一直循环</li><li>满足条件后结束当天循环</li></ol><h2 id="方案选择" tabindex="-1"><a class="header-anchor" href="#方案选择" aria-hidden="true">#</a> 方案选择</h2>',7),d=n("code",null,"Handler",-1),u=n("code",null,"Timer",-1),k=n("code",null,"ScheduledExecutorService",-1),m={href:"https://blog.csdn.net/qq_27489007/article/details/79220609",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.android.google.cn/topic/libraries/architecture/workmanager",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"WorkManager",-1),h={href:"https://developer.android.google.cn/training/scheduling/alarms",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"AlarmManager",-1),_={href:"https://developer.android.google.cn/reference/android/app/job/JobScheduler",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"JobScheduler",-1),f={href:"https://developer.android.google.cn/reference/android/app/AlarmManager",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"AlarmManager",-1),T={href:"https://developer.android.google.cn/reference/android/app/BroadcastReceiver",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"BroadcastReceiver",-1),x=t('<p>这几个方案中，前三者都需要 APP 在前台运行，<code>WorkManager</code>和<code>AlarmManager</code>则在 APP 退出之后也可以使用，甚至在低版本上<code>WorkManager</code>底层也是通过<code>AlarmManager</code>实现的。</p><p><code>WorkManager</code>主要倾向于保证任务在 APP 退出，甚至设备关机重启等情况下也会被执行，虽然也提供循环任务的，但是无法确保在精确的时间得到执行，且最小间隔 15min。</p><p>相比之下，<code>AlarmManager</code>可以确保任务在指定时间（精确的时间）得到执行，并且对于循环的间隔也更加灵活。</p><figure><img src="https://developer.android.google.cn/images/guide/background/bg-job-choose.svg" alt="Android 推荐选择方案" tabindex="0" loading="lazy"><figcaption>Android 推荐选择方案</figcaption></figure><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>据 Android 官网介绍，闹钟主要用于在应用程序生命周期之外进行定时操作。</p><p>闹钟具有以下特征：</p><blockquote><ul><li>它们可让您按设定的时间和/或间隔触发 intent。</li><li>您可以将它们与广播接收器结合使用，以启动服务以及执行其他操作。</li><li>它们在应用外部运行，因此即使应用未运行，或设备本身处于休眠状态，您也可以使用它们来触发事件或操作。</li><li>它们可以帮助您最大限度地降低应用的资源要求。您可以安排定期执行操作，而无需依赖定时器或持续运行后台服务。</li></ul></blockquote><p>需要注意的是，Android 为了避免重复闹钟可能带来的性能消耗，推荐使用不是很精确的<code>setInexactRepeating()</code>，而不是精确的<code>setRepeating()</code>，并且在<code>API19+</code>之后的所有的重复闹钟都不是精确的，如果需要精确闹钟需要使用 <code>setWindow(int, long, long, android.app.PendingIntent)</code> 或<code>setExact(int, long, android.app.PendingIntent)</code>。重复闹钟具有以下特征：</p>',9),R={href:"https://developer.android.google.cn/training/scheduling/alarms#type",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,"触发时间。如果您指定的触发时间为过去的时间，则闹钟会立即触发。",-1),C=n("li",null,"闹钟的间隔。例如，每天一次、每小时一次、每 5 分钟一次，等等。",-1),P=n("li",null,"闹钟触发的待定 intent。当您设置了使用同一待定 intent 的第二个闹钟时，它会替换原始闹钟。",-1),S=t(`<h3 id="闹钟类型" tabindex="-1"><a class="header-anchor" href="#闹钟类型" aria-hidden="true">#</a> 闹钟类型</h3><p>闹钟有两个类型：</p><ol><li><p>距离系统启动后的时间，主要用于“间隔多久重复一次”这样的需求</p><p><code>ELAPSED_REALTIME</code> 距离开机时间多久后启用闹钟，如果系统在休眠中则不会唤醒</p><p><code>ELAPSED_REALTIME_WAKEUP</code> 在系统休眠时也会唤醒系统</p></li><li><p>精确的时间 UTC，主要用于“在当天下午 8 点整开始”等这样的需求</p><p><code>RTC</code> 在指定的时间触发闹钟，不会唤醒机器</p><p><code>RTC_WAKEUP</code> 在指定时间触发闹钟，并且唤醒设备</p></li></ol><h3 id="触发时间" tabindex="-1"><a class="header-anchor" href="#触发时间" aria-hidden="true">#</a> 触发时间</h3><p>闹钟触发的时间，分为从设备上次启动时间和精准时间两种。</p><p>如果触发的时间早于当前系统时间的话，系统会根据过去的时间和重复间隔选择一个合适的时间来触发（有几分钟内的误差）。</p><p>从实际运行来看，使用<code>ELAPSED_*</code>的基本上会立即（几秒钟）触发该闹钟，并且每次循环间隔有几毫秒的误差。</p><p>使用<code>RTC_*</code>则会在刚开始的两三次出现间隔时间小于指定时间的情况，后期稳定：</p><p>设置的闹钟间隔为 10 分钟，闹钟开始时间早于当前时间，唤醒结果如下</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>alarmMgr<span class="token punctuation">.</span><span class="token function">setRepeating</span><span class="token punctuation">(</span>AlarmManager<span class="token punctuation">.</span>RTC_WAKEUP<span class="token punctuation">,</span>
            calendar<span class="token punctuation">.</span>timeInMillis<span class="token punctuation">,</span>
            <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>
            alarmIntent
        <span class="token punctuation">)</span>
<span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">13</span><span class="token operator">:</span><span class="token number">46.696</span>
<span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">26.634</span>
<span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">24</span><span class="token operator">:</span><span class="token number">26.765</span>
<span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">26.579</span>
<span class="token number">2019</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">46.785</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="间隔时间" tabindex="-1"><a class="header-anchor" href="#间隔时间" aria-hidden="true">#</a> 间隔时间</h3><p>间隔时间有两种：</p><ol><li><code>AlarmManager interval</code> 如果设置的是<code>setInexactRepeating()</code>，则需要设置<code>AlarmManager </code>指定的几种间隔时间。</li><li>任意时间 <code>setRepeating()</code>方法可以使用任意时间</li></ol><h3 id="待定的-intent" tabindex="-1"><a class="header-anchor" href="#待定的-intent" aria-hidden="true">#</a> 待定的 intent</h3><blockquote><p>当您设置了使用同一待定 intent 的第二个闹钟时，它会替换原始闹钟</p></blockquote><p>待定的<code>Intent</code>是一个<code>PendingIntent</code>，可以用来打开<code>Service</code>，<code>Activity</code>，<code>Broadcast</code>等等。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">getPendingIntent</span><span class="token punctuation">(</span>
        context<span class="token operator">:</span> Context<span class="token punctuation">,</span>
        action<span class="token operator">:</span> String<span class="token punctuation">,</span>
        requestCode<span class="token operator">:</span> Int
    <span class="token punctuation">)</span><span class="token operator">:</span> PendingIntent <span class="token punctuation">{</span>
        <span class="token keyword">return</span> PendingIntent<span class="token punctuation">.</span><span class="token function">getBroadcast</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> <span class="token function">Intent</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这里的<code>requestCode</code>，当不需要该闹钟时可以根据这个来取消。</p><h3 id="取消闹钟" tabindex="-1"><a class="header-anchor" href="#取消闹钟" aria-hidden="true">#</a> 取消闹钟</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>alarmManager<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token function">getPendingIntent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>ACTION<span class="token punctuation">,</span>RequestCode<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="在重启时恢复闹钟" tabindex="-1"><a class="header-anchor" href="#在重启时恢复闹钟" aria-hidden="true">#</a> 在重启时恢复闹钟</h3><p>由于闹钟会在设备关机的时候被取消，所以需要监听设备开机广播（<code>android.intent.action.BOOT_COMPLETED</code>），并且恢复闹钟。</p><h2 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现" aria-hidden="true">#</a> 具体实现</h2><h3 id="设置一个每天指定时间循环的闹钟" tabindex="-1"><a class="header-anchor" href="#设置一个每天指定时间循环的闹钟" aria-hidden="true">#</a> 设置一个每天指定时间循环的闹钟</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">setupDailyAlarmClock</span><span class="token punctuation">(</span> context<span class="token operator">:</span> Context<span class="token punctuation">,</span>startTime<span class="token operator">:</span> Pair<span class="token operator">&lt;</span>Int<span class="token punctuation">,</span> Int<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">val</span> alarmMgr <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>ALARM_SERVICE<span class="token punctuation">)</span> <span class="token keyword">as</span> AlarmManager
        <span class="token keyword">val</span> alarmIntent <span class="token operator">=</span> <span class="token function">getPendingIntent</span><span class="token punctuation">(</span>
            context<span class="token punctuation">,</span>
            BROADCAST_ACTION_REPEAT<span class="token punctuation">,</span>
            RequestCode<span class="token punctuation">.</span>START_REPEAT_INVENTORY
        <span class="token punctuation">)</span>
        <span class="token comment">// Set the alarm to start at xx:xx</span>
        <span class="token keyword">val</span> calendar<span class="token operator">:</span> Calendar <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span>
            timeInMillis <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>HOUR_OF_DAY<span class="token punctuation">,</span> startTime<span class="token punctuation">.</span>first<span class="token punctuation">)</span>
            <span class="token keyword">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MINUTE<span class="token punctuation">,</span> startTime<span class="token punctuation">.</span>second<span class="token punctuation">)</span>
            <span class="token keyword">set</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>SECOND<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 1 day</span>
        alarmMgr<span class="token punctuation">.</span><span class="token function">setRepeating</span><span class="token punctuation">(</span>
            AlarmManager<span class="token punctuation">.</span>RTC_WAKEUP<span class="token punctuation">,</span>
            calendar<span class="token punctuation">.</span>timeInMillis<span class="token punctuation">,</span>
            AlarmManager<span class="token punctuation">.</span>INTERVAL_DAY<span class="token punctuation">,</span>
            alarmIntent
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在每天指定时间到了之后，开始设置一个间隔 10 分钟唤醒一次的闹钟，直到超时或者满足指定的条件后取消该闹钟。</p><h3 id="监听每日循环的闹钟" tabindex="-1"><a class="header-anchor" href="#监听每日循环的闹钟" aria-hidden="true">#</a> 监听每日循环的闹钟</h3><p>监听其发送的广播<code>BROADCAST_ACTION_REPEAT</code>。</p><p>启用当日循环闹钟：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>    <span class="token keyword">fun</span> <span class="token function">setupRepeatAlarmClock</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> startTime <span class="token operator">=</span> SharePreferencesUtils<span class="token punctuation">.</span>sharedPreferences
            <span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>KEY_STARTT_TIME<span class="token punctuation">,</span>DEF_INVENTORY_TIME<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">toFormatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token keyword">return</span>

        <span class="token keyword">val</span> alarmMgr <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>ALARM_SERVICE<span class="token punctuation">)</span> <span class="token keyword">as</span> AlarmManager
        <span class="token keyword">val</span> alarmIntent <span class="token operator">=</span> <span class="token function">getPendingIntent</span><span class="token punctuation">(</span>
            context<span class="token punctuation">,</span>
            BROADCAST_ACTION_START<span class="token punctuation">,</span>
            RequestCode<span class="token punctuation">.</span>START_INVENTORY
        <span class="token punctuation">)</span>

        <span class="token keyword">val</span> tenMinutes <span class="token operator">=</span> DEF_INVENTORY_DURATION <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span>
        alarmMgr<span class="token punctuation">.</span><span class="token function">setRepeating</span><span class="token punctuation">(</span>
            AlarmManager<span class="token punctuation">.</span>ELAPSED_REALTIME_WAKEUP<span class="token punctuation">,</span><span class="token comment">//从开机后多久</span>
            SystemClock<span class="token punctuation">.</span><span class="token function">elapsedRealtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//当前自开机完后的时间</span>
            tenMinutes<span class="token punctuation">,</span><span class="token comment">//每十分钟循环一次</span>
            alarmIntent
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在广播接收器中收听到<code>BROADCAST_ACTION_START</code>后去开启任务</p><h3 id="条件满足后关闭当日循环闹钟" tabindex="-1"><a class="header-anchor" href="#条件满足后关闭当日循环闹钟" aria-hidden="true">#</a> 条件满足后关闭当日循环闹钟</h3><p>在收到<code>BROADCAST_ACTION_START</code>后检测到已经超时或其他满足取消条件的情况，则取消任务。</p><p>或者可以再订一个结束时间的闹钟，到时间后取消当日循环闹钟。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> alarmManager <span class="token operator">=</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>ALARM_SERVICE<span class="token punctuation">)</span> <span class="token keyword">as</span> AlarmManager
alarmManager<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span>pIntent<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这里的<code>pIntent</code>需要与设置闹钟时的<code>PendingIntent</code>一致 (满足<code>Intent.filterEquals()</code>的条件)。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,37),y={href:"https://blog.csdn.net/qq_27489007/article/details/79220609",target:"_blank",rel:"noopener noreferrer"},w={href:"https://developer.android.google.cn/training/scheduling/alarms",target:"_blank",rel:"noopener noreferrer"};function N(O,q){const s=p("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[a("Android 中可以用到的循环任务实现有"),d,a("、"),u,a("、"),k,a("（这三个可以看"),n("a",m,[a("这里"),e(s)]),a("），还有最近的"),n("a",v,[b,e(s)]),a("和我们要用到的"),n("a",h,[g,e(s)]),a("。")]),n("blockquote",null,[n("p",null,[a("WorkManager offers a backwards compatible (API level 14+) API leveraging "),n("a",_,[A,e(s)]),a(" API (API level 23+) and above to help optimize battery life and batch jobs and a combination of "),n("a",f,[I,e(s)]),a(" & "),n("a",T,[E,e(s)]),a(" on lower devices.")])]),x,n("blockquote",null,[n("ul",null,[n("li",null,[a("闹钟类型。要了解详情，请参阅"),n("a",R,[a("选择闹钟类型"),e(s)]),a("。")]),M,C,P])]),S,n("p",null,[n("a",y,[a("Android 定时任务及循环任务基础大集合"),e(s)])]),n("p",null,[n("a",w,[a("安排重复闹钟 Android 官网"),e(s)])])])}const L=o(i,[["render",N],["__file","5754fcd2.html.vue"]]);export{L as default};
