const e=JSON.parse('{"key":"v-0009fa4f","path":"/posts/2822c354.html","title":"Dagger 2 从0到1之旅","lang":"zh-CN","frontmatter":{"permalink":"/posts/2822c354.html","title":"Dagger 2 从0到1之旅","tag":"dagger2","abbrlink":"2822c354","date":"2019-01-26T15:16:17.000Z","description":"前言 Dagger 2是Google维护的一款可用于Java和Android的依赖注入框架。 本文主要是简单梳理Dagger 2中各个注解的作用，以及其简单用法，不涉及具体项目应用。 先解释几个概念： 依赖注入：是一个对象（或静态方法）给另一个对象提供依赖的技术。 **依赖**是可以使用的对象（Service），而把依赖提供给使用该依赖的对象（Client）的过程叫做注入。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/2822c354.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Dagger 2 从0到1之旅"}],["meta",{"property":"og:description","content":"前言 Dagger 2是Google维护的一款可用于Java和Android的依赖注入框架。 本文主要是简单梳理Dagger 2中各个注解的作用，以及其简单用法，不涉及具体项目应用。 先解释几个概念： 依赖注入：是一个对象（或静态方法）给另一个对象提供依赖的技术。 **依赖**是可以使用的对象（Service），而把依赖提供给使用该依赖的对象（Client）的过程叫做注入。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-15T10:32:39.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"dagger2"}],["meta",{"property":"article:published_time","content":"2019-01-26T15:16:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-15T10:32:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dagger 2 从0到1之旅\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-26T15:16:17.000Z\\",\\"dateModified\\":\\"2023-12-15T10:32:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"@Inject","slug":"inject","link":"#inject","children":[]},{"level":2,"title":"@Component","slug":"component","link":"#component","children":[]},{"level":2,"title":"@Module和@Provides","slug":"module和-provides","link":"#module和-provides","children":[]},{"level":2,"title":"@Named和@Qualifier","slug":"named和-qualifier","link":"#named和-qualifier","children":[]},{"level":2,"title":"@Singleton和@Scope","slug":"singleton和-scope","link":"#singleton和-scope","children":[]}],"git":{"createdTime":1702636359000,"updatedTime":1702636359000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":7.66,"words":2299},"filePathRelative":"_posts/Dagger2从0到1之旅.md","localizedDate":"2019年1月26日","excerpt":"<h1> 前言</h1>\\n<p><code>Dagger 2</code>是Google维护的一款可用于<code>Java</code>和<code>Android</code>的依赖注入框架。</p>\\n<p>本文主要是简单梳理<code>Dagger 2</code>中各个注解的作用，以及其简单用法，不涉及具体项目应用。</p>\\n<p>先解释几个概念：</p>\\n<ul>\\n<li>\\n<p><strong><code>依赖注入</code></strong>：是一个对象（或静态方法）给另一个对象提供依赖的技术。</p>\\n</li>\\n<li>\\n<p>**<code>依赖</code>**是可以使用的对象（<code>Service</code>），而把依赖提供给使用该依赖的对象（<code>Client</code>）的过程叫做<code>注入</code>。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
