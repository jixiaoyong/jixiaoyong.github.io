const e=JSON.parse('{"key":"v-2ee0f8cf","path":"/posts/60f8d92f.html","title":"Flutter 滑动分析之 Scrollview","lang":"zh-CN","frontmatter":{"permalink":"/posts/60f8d92f.html","title":"Flutter 滑动分析之 Scrollview","date":"2022-07-16T02:14:01.000Z","updated":"2023-12-30T08:17:02.000Z","abbrlink":"60f8d92f","tag":"flutter","description":"Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类： 基于 RenderBox 的 box protocol 实现的，主要基于 Size 实现布局。常见的有 SingleChildScrollView。 基于 RenderSliver 的 sliver protocol 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自 ScrollView 的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/60f8d92f.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Flutter 滑动分析之 Scrollview"}],["meta",{"property":"og:description","content":"Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类： 基于 RenderBox 的 box protocol 实现的，主要基于 Size 实现布局。常见的有 SingleChildScrollView。 基于 RenderSliver 的 sliver protocol 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自 ScrollView 的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T11:37:59.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"flutter"}],["meta",{"property":"article:published_time","content":"2022-07-16T02:14:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T11:37:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter 滑动分析之 Scrollview\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-16T02:14:01.000Z\\",\\"dateModified\\":\\"2024-01-01T11:37:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Widget buildViewport()","slug":"widget-buildviewport","link":"#widget-buildviewport","children":[{"level":3,"title":"RenderViewportBase","slug":"renderviewportbase","link":"#renderviewportbase","children":[]},{"level":3,"title":"RenderViewport","slug":"renderviewport","link":"#renderviewport","children":[]},{"level":3,"title":"RenderShrinkWrappingViewport","slug":"rendershrinkwrappingviewport","link":"#rendershrinkwrappingviewport","children":[]}]},{"level":2,"title":"List<Widget> buildSlivers()","slug":"list-widget-buildslivers","link":"#list-widget-buildslivers","children":[]}],"git":{"createdTime":1704109079000,"updatedTime":1704109079000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":8.05,"words":2415},"filePathRelative":"_posts/Flutter滑动分析之Scrollview.md","localizedDate":"2022年7月16日","excerpt":"<p>Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类：</p>\\n<ul>\\n<li>基于 RenderBox 的 <em>box protocol</em> 实现的，主要基于 Size 实现布局。常见的有 SingleChildScrollView。</li>\\n<li>基于 RenderSliver 的 <em>sliver protocol</em> 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自 ScrollView 的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。</li>\\n</ul>","autoDesc":true}');export{e as data};
