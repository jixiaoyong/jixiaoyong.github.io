import{_ as i,c as s,o as a,a as n}from"./app-BhWMVeaj.js";const e={},l=n(`<p>近期有一个实现定时启动 APP 提醒用户的需求，一番比较之后觉得用闹钟<code>AlarmManager</code>实现比较合适，本文是对此过程的梳理，属于比较基础性的内容。</p><h2 id="需求" tabindex="-1"><a class="header-anchor" href="#需求"><span>需求</span></a></h2><p>需求需要实现</p><blockquote><p>&quot;每天在指定时间范围内，循环提示用户直到满足指定的条件&quot;</p></blockquote><p>拆分需求：</p><ol><li>每天都要提醒</li><li>在时间范围内一直循环</li><li>满足条件后结束当天循环</li></ol><h2 id="方案选择" tabindex="-1"><a class="header-anchor" href="#方案选择"><span>方案选择</span></a></h2><p>Android 中可以用到的循环任务实现有<code>Handler</code>、<code>Timer</code>、<code>ScheduledExecutorService</code>（这三个可以看<a href="https://blog.csdn.net/qq_27489007/article/details/79220609" target="_blank" rel="noopener noreferrer">这里</a>），还有最近的<a href="https://developer.android.google.cn/topic/libraries/architecture/workmanager" target="_blank" rel="noopener noreferrer"><code>WorkManager</code></a>和我们要用到的<a href="https://developer.android.google.cn/training/scheduling/alarms" target="_blank" rel="noopener noreferrer"><code>AlarmManager</code></a>。</p><blockquote><p>WorkManager offers a backwards compatible (API level 14+) API leveraging <a href="https://developer.android.google.cn/reference/android/app/job/JobScheduler" target="_blank" rel="noopener noreferrer"><code>JobScheduler</code></a> API (API level 23+) and above to help optimize battery life and batch jobs and a combination of <a href="https://developer.android.google.cn/reference/android/app/AlarmManager" target="_blank" rel="noopener noreferrer"><code>AlarmManager</code></a> &amp; <a href="https://developer.android.google.cn/reference/android/app/BroadcastReceiver" target="_blank" rel="noopener noreferrer"><code>BroadcastReceiver</code></a> on lower devices.</p></blockquote><p>这几个方案中，前三者都需要 APP 在前台运行，<code>WorkManager</code>和<code>AlarmManager</code>则在 APP 退出之后也可以使用，甚至在低版本上<code>WorkManager</code>底层也是通过<code>AlarmManager</code>实现的。</p><p><code>WorkManager</code>主要倾向于保证任务在 APP 退出，甚至设备关机重启等情况下也会被执行，虽然也提供循环任务的，但是无法确保在精确的时间得到执行，且最小间隔 15min。</p><p>相比之下，<code>AlarmManager</code>可以确保任务在指定时间（精确的时间）得到执行，并且对于循环的间隔也更加灵活。</p><figure><img src="https://developer.android.google.cn/images/guide/background/bg-job-choose.svg" alt="Android 推荐选择方案" tabindex="0" loading="lazy"><figcaption>Android 推荐选择方案</figcaption></figure><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h2><p>据 Android 官网介绍，闹钟主要用于在应用程序生命周期之外进行定时操作。</p><p>闹钟具有以下特征：</p><blockquote><ul><li>它们可让您按设定的时间和/或间隔触发 intent。</li><li>您可以将它们与广播接收器结合使用，以启动服务以及执行其他操作。</li><li>它们在应用外部运行，因此即使应用未运行，或设备本身处于休眠状态，您也可以使用它们来触发事件或操作。</li><li>它们可以帮助您最大限度地降低应用的资源要求。您可以安排定期执行操作，而无需依赖定时器或持续运行后台服务。</li></ul></blockquote><p>需要注意的是，Android 为了避免重复闹钟可能带来的性能消耗，推荐使用不是很精确的<code>setInexactRepeating()</code>，而不是精确的<code>setRepeating()</code>，并且在<code>API19+</code>之后的所有的重复闹钟都不是精确的，如果需要精确闹钟需要使用 <code>setWindow(int, long, long, android.app.PendingIntent)</code> 或<code>setExact(int, long, android.app.PendingIntent)</code>。重复闹钟具有以下特征：</p><blockquote><ul><li>闹钟类型。要了解详情，请参阅<a href="https://developer.android.google.cn/training/scheduling/alarms#type" target="_blank" rel="noopener noreferrer">选择闹钟类型</a>。</li><li>触发时间。如果您指定的触发时间为过去的时间，则闹钟会立即触发。</li><li>闹钟的间隔。例如，每天一次、每小时一次、每 5 分钟一次，等等。</li><li>闹钟触发的待定 intent。当您设置了使用同一待定 intent 的第二个闹钟时，它会替换原始闹钟。</li></ul></blockquote><h3 id="闹钟类型" tabindex="-1"><a class="header-anchor" href="#闹钟类型"><span>闹钟类型</span></a></h3><p>闹钟有两个类型：</p><ol><li><p>距离系统启动后的时间，主要用于“间隔多久重复一次”这样的需求</p><p><code>ELAPSED_REALTIME</code> 距离开机时间多久后启用闹钟，如果系统在休眠中则不会唤醒</p><p><code>ELAPSED_REALTIME_WAKEUP</code> 在系统休眠时也会唤醒系统</p></li><li><p>精确的时间 UTC，主要用于“在当天下午 8 点整开始”等这样的需求</p><p><code>RTC</code> 在指定的时间触发闹钟，不会唤醒机器</p><p><code>RTC_WAKEUP</code> 在指定时间触发闹钟，并且唤醒设备</p></li></ol><h3 id="触发时间" tabindex="-1"><a class="header-anchor" href="#触发时间"><span>触发时间</span></a></h3><p>闹钟触发的时间，分为从设备上次启动时间和精准时间两种。</p><p>如果触发的时间早于当前系统时间的话，系统会根据过去的时间和重复间隔选择一个合适的时间来触发（有几分钟内的误差）。</p><p>从实际运行来看，使用<code>ELAPSED_*</code>的基本上会立即（几秒钟）触发该闹钟，并且每次循环间隔有几毫秒的误差。</p><p>使用<code>RTC_*</code>则会在刚开始的两三次出现间隔时间小于指定时间的情况，后期稳定：</p><p>设置的闹钟间隔为 10 分钟，闹钟开始时间早于当前时间，唤醒结果如下</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">alarmMgr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setRepeating</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(AlarmManager.RTC_WAKEUP,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            calendar.timeInMillis,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">            10</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            alarmIntent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2019</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">06</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 14</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">46</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">696</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2019</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">06</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 14</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">634</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2019</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">06</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 14</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">765</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2019</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">06</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 14</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">34</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">579</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2019</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">06</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 14</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">43</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">46</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">785</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="间隔时间" tabindex="-1"><a class="header-anchor" href="#间隔时间"><span>间隔时间</span></a></h3><p>间隔时间有两种：</p><ol><li><code>AlarmManager interval</code> 如果设置的是<code>setInexactRepeating()</code>，则需要设置<code>AlarmManager </code>指定的几种间隔时间。</li><li>任意时间 <code>setRepeating()</code>方法可以使用任意时间</li></ol><h3 id="待定的-intent" tabindex="-1"><a class="header-anchor" href="#待定的-intent"><span>待定的 intent</span></a></h3><blockquote><p>当您设置了使用同一待定 intent 的第二个闹钟时，它会替换原始闹钟</p></blockquote><p>待定的<code>Intent</code>是一个<code>PendingIntent</code>，可以用来打开<code>Service</code>，<code>Activity</code>，<code>Broadcast</code>等等。</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> getPendingIntent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        context: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        action: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        requestCode: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    ): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">PendingIntent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> PendingIntent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBroadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(context, requestCode, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Intent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(action), </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这里的<code>requestCode</code>，当不需要该闹钟时可以根据这个来取消。</p><h3 id="取消闹钟" tabindex="-1"><a class="header-anchor" href="#取消闹钟"><span>取消闹钟</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">alarmManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getPendingIntent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(context,ACTION,RequestCode))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="在重启时恢复闹钟" tabindex="-1"><a class="header-anchor" href="#在重启时恢复闹钟"><span>在重启时恢复闹钟</span></a></h3><p>由于闹钟会在设备关机的时候被取消，所以需要监听设备开机广播（<code>android.intent.action.BOOT_COMPLETED</code>），并且恢复闹钟。</p><h2 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现"><span>具体实现</span></a></h2><h3 id="设置一个每天指定时间循环的闹钟" tabindex="-1"><a class="header-anchor" href="#设置一个每天指定时间循环的闹钟"><span>设置一个每天指定时间循环的闹钟</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> setupDailyAlarmClock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">( context: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,startTime: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Pair</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alarmMgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getSystemService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Context.ALARM_SERVICE) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> AlarmManager</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alarmIntent </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> getPendingIntent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            context,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            BROADCAST_ACTION_REPEAT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            RequestCode.START_REPEAT_INVENTORY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // Set the alarm to start at xx:xx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> calendar: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Calendar</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Calendar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            timeInMillis </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Calendar.HOUR_OF_DAY, startTime.first)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Calendar.MINUTE, startTime.second)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Calendar.SECOND, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // 1 day</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        alarmMgr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setRepeating</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            AlarmManager.RTC_WAKEUP,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            calendar.timeInMillis,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            AlarmManager.INTERVAL_DAY,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            alarmIntent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在每天指定时间到了之后，开始设置一个间隔 10 分钟唤醒一次的闹钟，直到超时或者满足指定的条件后取消该闹钟。</p><h3 id="监听每日循环的闹钟" tabindex="-1"><a class="header-anchor" href="#监听每日循环的闹钟"><span>监听每日循环的闹钟</span></a></h3><p>监听其发送的广播<code>BROADCAST_ACTION_REPEAT</code>。</p><p>启用当日循环闹钟：</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> setupRepeatAlarmClock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(context: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> startTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> SharePreferencesUtils.sharedPreferences</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(KEY_STARTT_TIME,DEF_INVENTORY_TIME)?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">toFormatTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() ?: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alarmMgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getSystemService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Context.ALARM_SERVICE) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> AlarmManager</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alarmIntent </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> getPendingIntent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            context,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            BROADCAST_ACTION_START,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            RequestCode.START_INVENTORY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> tenMinutes </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> DEF_INVENTORY_DURATION </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        alarmMgr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setRepeating</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            AlarmManager.ELAPSED_REALTIME_WAKEUP,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//从开机后多久</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            SystemClock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">elapsedRealtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//当前自开机完后的时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            tenMinutes,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//每十分钟循环一次</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            alarmIntent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在广播接收器中收听到<code>BROADCAST_ACTION_START</code>后去开启任务</p><h3 id="条件满足后关闭当日循环闹钟" tabindex="-1"><a class="header-anchor" href="#条件满足后关闭当日循环闹钟"><span>条件满足后关闭当日循环闹钟</span></a></h3><p>在收到<code>BROADCAST_ACTION_START</code>后检测到已经超时或其他满足取消条件的情况，则取消任务。</p><p>或者可以再订一个结束时间的闹钟，到时间后取消当日循环闹钟。</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> alarmManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> getSystemService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(Context.ALARM_SERVICE) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> AlarmManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">alarmManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(pIntent)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这里的<code>pIntent</code>需要与设置闹钟时的<code>PendingIntent</code>一致 (满足<code>Intent.filterEquals()</code>的条件)。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p><a href="https://blog.csdn.net/qq_27489007/article/details/79220609" target="_blank" rel="noopener noreferrer">Android 定时任务及循环任务基础大集合</a></p><p><a href="https://developer.android.google.cn/training/scheduling/alarms" target="_blank" rel="noopener noreferrer">安排重复闹钟 Android 官网</a></p>`,58),t=[l];function h(p,k){return a(),s("div",null,t)}const d=i(e,[["render",h],["__file","5754fcd2.html.vue"]]),o=JSON.parse('{"path":"/posts/5754fcd2.html","title":"Android AlarmManager 设置重复任务","lang":"zh-CN","frontmatter":{"permalink":"/posts/5754fcd2.html","title":"Android AlarmManager 设置重复任务","abbrlink":"5754fcd2","date":"2019-12-06T10:18:18.000Z","updated":"2023-12-30T08:17:02.000Z","isOriginal":true,"description":"近期有一个实现定时启动 APP 提醒用户的需求，一番比较之后觉得用闹钟AlarmManager实现比较合适，本文是对此过程的梳理，属于比较基础性的内容。 需求 需求需要实现 \\"每天在指定时间范围内，循环提示用户直到满足指定的条件\\" 拆分需求： 每天都要提醒 在时间范围内一直循环 满足条件后结束当天循环 方案选择 Android 中可以用到的循环任务实现...","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/5754fcd2.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android AlarmManager 设置重复任务"}],["meta",{"property":"og:description","content":"近期有一个实现定时启动 APP 提醒用户的需求，一番比较之后觉得用闹钟AlarmManager实现比较合适，本文是对此过程的梳理，属于比较基础性的内容。 需求 需求需要实现 \\"每天在指定时间范围内，循环提示用户直到满足指定的条件\\" 拆分需求： 每天都要提醒 在时间范围内一直循环 满足条件后结束当天循环 方案选择 Android 中可以用到的循环任务实现..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://developer.android.google.cn/images/guide/background/bg-job-choose.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T16:00:22.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2019-12-06T10:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T16:00:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android AlarmManager 设置重复任务\\",\\"image\\":[\\"https://developer.android.google.cn/images/guide/background/bg-job-choose.svg\\"],\\"datePublished\\":\\"2019-12-06T10:18:18.000Z\\",\\"dateModified\\":\\"2024-05-31T16:00:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"需求","slug":"需求","link":"#需求","children":[]},{"level":2,"title":"方案选择","slug":"方案选择","link":"#方案选择","children":[]},{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[{"level":3,"title":"闹钟类型","slug":"闹钟类型","link":"#闹钟类型","children":[]},{"level":3,"title":"触发时间","slug":"触发时间","link":"#触发时间","children":[]},{"level":3,"title":"间隔时间","slug":"间隔时间","link":"#间隔时间","children":[]},{"level":3,"title":"待定的 intent","slug":"待定的-intent","link":"#待定的-intent","children":[]},{"level":3,"title":"取消闹钟","slug":"取消闹钟","link":"#取消闹钟","children":[]},{"level":3,"title":"在重启时恢复闹钟","slug":"在重启时恢复闹钟","link":"#在重启时恢复闹钟","children":[]}]},{"level":2,"title":"具体实现","slug":"具体实现","link":"#具体实现","children":[{"level":3,"title":"设置一个每天指定时间循环的闹钟","slug":"设置一个每天指定时间循环的闹钟","link":"#设置一个每天指定时间循环的闹钟","children":[]},{"level":3,"title":"监听每日循环的闹钟","slug":"监听每日循环的闹钟","link":"#监听每日循环的闹钟","children":[]},{"level":3,"title":"条件满足后关闭当日循环闹钟","slug":"条件满足后关闭当日循环闹钟","link":"#条件满足后关闭当日循环闹钟","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1653726847000,"updatedTime":1717171222000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":3},{"name":"JI,XIAOYONG","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":5.68,"words":1705},"filePathRelative":"_posts/AndroidAlarmManager设置重复任务.md","localizedDate":"2019年12月6日","excerpt":"<p>近期有一个实现定时启动 APP 提醒用户的需求，一番比较之后觉得用闹钟<code>AlarmManager</code>实现比较合适，本文是对此过程的梳理，属于比较基础性的内容。</p>\\n<h2>需求</h2>\\n<p>需求需要实现</p>\\n<blockquote>\\n<p>\\"每天在指定时间范围内，循环提示用户直到满足指定的条件\\"</p>\\n</blockquote>\\n<p>拆分需求：</p>\\n<ol>\\n<li>每天都要提醒</li>\\n<li>在时间范围内一直循环</li>\\n<li>满足条件后结束当天循环</li>\\n</ol>\\n<h2>方案选择</h2>\\n<p>Android 中可以用到的循环任务实现有<code>Handler</code>、<code>Timer</code>、<code>ScheduledExecutorService</code>（这三个可以看<a href=\\"https://blog.csdn.net/qq_27489007/article/details/79220609\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这里</a>），还有最近的<a href=\\"https://developer.android.google.cn/topic/libraries/architecture/workmanager\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>WorkManager</code></a>和我们要用到的<a href=\\"https://developer.android.google.cn/training/scheduling/alarms\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>AlarmManager</code></a>。</p>","autoDesc":true}');export{d as comp,o as data};
