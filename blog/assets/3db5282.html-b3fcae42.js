const n=JSON.parse('{"key":"v-004da386","path":"/posts/3db5282.html","title":"Dart 读取文件过程分析","lang":"zh-CN","frontmatter":{"permalink":"/posts/3db5282.html","title":"Dart 读取文件过程分析","date":"2022-06-02T08:25:23.000Z","updated":"2023-12-30T08:17:02.000Z","abbrlink":"3db5282","description":"Dart 读取文件时，先在 Dart 代码创建 File 引用，通过与IOService跨Isolate通信（先通过 IO Service 而发送请求到 native 端，等到 native 执行完操作之后再回调结果）从而实现对文件的读写。 实现一个简单的读取文件的代码如下： import \'dart:io\'; main() { var filePath = r\\"G:/21996.1.210529-1541.co_release_CLIENT_CONSUMER_x64FRE_en-us.iso\\"; var file = File(filePath); var startTime = printCurrentTimeMs(\\"start run file.readAsBytes\\"); file.readAsBytes().then((value) { printCurrentTimeMs(\\"file.readAsBytes() finish\\", lastTimeMs: startTime, suffix: \\"\\\\nfile.readAsBytes() result:${value.length}\\"); }); printCurrentTimeMs(\\"finish run file.readAsBytes\\"); } int printCurrentTimeMs(String prefix, {String? suffix, int? lastTimeMs}) { var currentTimeMs = DateTime.now().millisecondsSinceEpoch; var timeElapseString = lastTimeMs == null ? \\"\\" : \\", time elapse:${currentTimeMs - lastTimeMs}ms \\"; print( \\"$prefix current time($currentTimeMs)$timeElapseString${suffix ?? \\"\\"}\\"); return currentTimeMs; }","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/3db5282.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Dart 读取文件过程分析"}],["meta",{"property":"og:description","content":"Dart 读取文件时，先在 Dart 代码创建 File 引用，通过与IOService跨Isolate通信（先通过 IO Service 而发送请求到 native 端，等到 native 执行完操作之后再回调结果）从而实现对文件的读写。 实现一个简单的读取文件的代码如下： import \'dart:io\'; main() { var filePath = r\\"G:/21996.1.210529-1541.co_release_CLIENT_CONSUMER_x64FRE_en-us.iso\\"; var file = File(filePath); var startTime = printCurrentTimeMs(\\"start run file.readAsBytes\\"); file.readAsBytes().then((value) { printCurrentTimeMs(\\"file.readAsBytes() finish\\", lastTimeMs: startTime, suffix: \\"\\\\nfile.readAsBytes() result:${value.length}\\"); }); printCurrentTimeMs(\\"finish run file.readAsBytes\\"); } int printCurrentTimeMs(String prefix, {String? suffix, int? lastTimeMs}) { var currentTimeMs = DateTime.now().millisecondsSinceEpoch; var timeElapseString = lastTimeMs == null ? \\"\\" : \\", time elapse:${currentTimeMs - lastTimeMs}ms \\"; print( \\"$prefix current time($currentTimeMs)$timeElapseString${suffix ?? \\"\\"}\\"); return currentTimeMs; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-30T10:32:41.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2022-06-02T08:25:23.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-30T10:32:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dart 读取文件过程分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-02T08:25:23.000Z\\",\\"dateModified\\":\\"2023-12-30T10:32:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Dart 端发起文件读写请求","slug":"dart-端发起文件读写请求","link":"#dart-端发起文件读写请求","children":[]},{"level":2,"title":"IO Service 中转","slug":"io-service-中转","link":"#io-service-中转","children":[]},{"level":2,"title":"Native 处理 Dart 的指令","slug":"native-处理-dart-的指令","link":"#native-处理-dart-的指令","children":[{"level":3,"title":"IOService_NewServicePort","slug":"ioservice-newserviceport","link":"#ioservice-newserviceport","children":[]},{"level":3,"title":"Dart_NewNativePort","slug":"dart-newnativeport","link":"#dart-newnativeport","children":[]},{"level":3,"title":"Dart_NewSendPort","slug":"dart-newsendport","link":"#dart-newsendport","children":[]}]}],"git":{"createdTime":1703932361000,"updatedTime":1703932361000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":20.96,"words":6288},"filePathRelative":"_posts/Dart读取文件过程分析.md","localizedDate":"2022年6月2日","excerpt":"<p>Dart 读取文件时，先在 Dart 代码创建 File 引用，通过与<code>IOService</code>跨<code>Isolate</code>通信（先通过 IO Service 而发送请求到 native 端，等到 native 执行完操作之后再回调结果）从而实现对文件的读写。</p>\\n<p>实现一个简单的读取文件的代码如下：</p>\\n<div class=\\"language-dart line-numbers-mode\\" data-ext=\\"dart\\"><pre class=\\"language-dart\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\'dart:io\'</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> filePath <span class=\\"token operator\\">=</span>\\n      <span class=\\"token string-literal\\"><span class=\\"token string\\">r\\"G:/21996.1.210529-1541.co_release_CLIENT_CONSUMER_x64FRE_en-us.iso\\"</span></span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">var</span> file <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">File</span><span class=\\"token punctuation\\">(</span>filePath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">var</span> startTime <span class=\\"token operator\\">=</span> <span class=\\"token function\\">printCurrentTimeMs</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"start run file.readAsBytes\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  file<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readAsBytes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">printCurrentTimeMs</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"file.readAsBytes() finish\\"</span></span><span class=\\"token punctuation\\">,</span>\\n        lastTimeMs<span class=\\"token punctuation\\">:</span> startTime<span class=\\"token punctuation\\">,</span>\\n        suffix<span class=\\"token punctuation\\">:</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"\\\\nfile.readAsBytes() result:</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">${</span><span class=\\"token expression\\">value<span class=\\"token punctuation\\">.</span>length</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">printCurrentTimeMs</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"finish run file.readAsBytes\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nint <span class=\\"token function\\">printCurrentTimeMs</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> prefix<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span><span class=\\"token class-name\\">String</span><span class=\\"token operator\\">?</span> suffix<span class=\\"token punctuation\\">,</span> int<span class=\\"token operator\\">?</span> lastTimeMs<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> currentTimeMs <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">DateTime</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>millisecondsSinceEpoch<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">var</span> timeElapseString <span class=\\"token operator\\">=</span>\\n      lastTimeMs <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">?</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"\\"</span></span> <span class=\\"token punctuation\\">:</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\", time elapse:</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">${</span><span class=\\"token expression\\">currentTimeMs <span class=\\"token operator\\">-</span> lastTimeMs</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">ms \\"</span></span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span>\\n      \\"$prefix current <span class=\\"token function\\">time</span><span class=\\"token punctuation\\">(</span>$currentTimeMs<span class=\\"token punctuation\\">)</span>$timeElapseString$<span class=\\"token punctuation\\">{</span>suffix <span class=\\"token operator\\">?</span><span class=\\"token operator\\">?</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"\\"</span></span><span class=\\"token punctuation\\">}</span>\\"<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> currentTimeMs<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
