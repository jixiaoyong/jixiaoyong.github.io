const e=JSON.parse('{"key":"v-ed65b9dc","path":"/posts/e41787ec.html","title":"Android 自定义 view 的一些知识点","lang":"zh-CN","frontmatter":{"permalink":"/posts/e41787ec.html","title":"Android 自定义 view 的一些知识点","tags":"android","abbrlink":"e41787ec","date":"2018-02-19T13:59:28.000Z","updated":"2023-12-30T08:17:02.000Z","description":"View 的绘制 View 的绘制分为 3 部分： measure 测量，决定了 View 的测量宽、高。几乎所有情况下都等同于 View 的最终宽、高（如果 View 需要多次 measure 才能确定大小，或者重写了layout()方法，并修改了传入的值的话则不会相等）。 layout 布局，决定 View 的四个顶点坐标和实际的宽、高。 draw 绘制，决定了 View 的具体显示内容。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/e41787ec.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android 自定义 view 的一些知识点"}],["meta",{"property":"og:description","content":"View 的绘制 View 的绘制分为 3 部分： measure 测量，决定了 View 的测量宽、高。几乎所有情况下都等同于 View 的最终宽、高（如果 View 需要多次 measure 才能确定大小，或者重写了layout()方法，并修改了传入的值的话则不会相等）。 layout 布局，决定 View 的四个顶点坐标和实际的宽、高。 draw 绘制，决定了 View 的具体显示内容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T16:08:43.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2018-02-19T13:59:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T16:08:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 自定义 view 的一些知识点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-19T13:59:28.000Z\\",\\"dateModified\\":\\"2024-01-01T16:08:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"View 的绘制","slug":"view-的绘制","link":"#view-的绘制","children":[]},{"level":2,"title":"MeasureSpec","slug":"measurespec","link":"#measurespec","children":[]},{"level":2,"title":"View 绘制流程","slug":"view-绘制流程","link":"#view-绘制流程","children":[]},{"level":2,"title":"获取 View 的宽高","slug":"获取-view-的宽高","link":"#获取-view-的宽高","children":[]},{"level":2,"title":"draw 过程","slug":"draw-过程","link":"#draw-过程","children":[]},{"level":2,"title":"绘制两个图形重叠部分","slug":"绘制两个图形重叠部分","link":"#绘制两个图形重叠部分","children":[]},{"level":2,"title":"适配自定义 view 宽高，设置默认值","slug":"适配自定义-view-宽高-设置默认值","link":"#适配自定义-view-宽高-设置默认值","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1704125323000,"updatedTime":1704125323000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":3.97,"words":1192},"filePathRelative":"_posts/Android自定义view的一些知识点.md","localizedDate":"2018年2月19日","excerpt":"<h2> View 的绘制</h2>\\n<p>View 的绘制分为 3 部分：</p>\\n<ol>\\n<li>\\n<p>measure</p>\\n<p>测量，决定了 View 的测量宽、高。几乎所有情况下都等同于 View 的最终宽、高（如果 View 需要多次 measure 才能确定大小，或者重写了<code>layout()</code>方法，并修改了传入的值的话则不会相等）。</p>\\n</li>\\n<li>\\n<p>layout</p>\\n<p>布局，决定 View 的四个顶点坐标和实际的宽、高。</p>\\n</li>\\n<li>\\n<p>draw</p>\\n<p>绘制，决定了 View 的具体显示内容。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
