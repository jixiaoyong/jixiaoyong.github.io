import{_ as e,r as p,o,c,a as n,b as a,d as t,e as l}from"./app-7684fb8c.js";const i={},u=n("p",null,"加载已安装应用、未安装 apk 中的资源，其思路主要是获取到对应的 ClassLoader/Context，通过 ClassLoader 加载 R.java 等类，再通过反射获取对应的资源 id 及资源。",-1),r=n("h2",{id:"加载已安装应用资源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#加载已安装应用资源","aria-hidden":"true"},"#"),a(" 加载已安装应用资源")],-1),d=n("h3",{id:"shareduserid",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#shareduserid","aria-hidden":"true"},"#"),a(" sharedUserId")],-1),k=n("p",null,[a("在当前应用中加载已安装的其他应用资源，需要二者有相同的"),n("code",null,"sharedUserId"),a("，这样 Android 系统为二者分配同一个 Linux 用户 ID，两个 App 可以相互访问代码、资源等。")],-1),v=n("p",null,"通过 Shared User id，拥有同一个 User id 的多个 APK 可以配置成运行在同一个进程中。所以默认就是可以互相访问任意数据。也可以配置成运行成不同的进程，同时可以访问其他 APK 的数据目录下的数据库和文件。就像访问本程序的数据一样。",-1),g={href:"https://blog.csdn.net/jiangwei0910410003/article/details/51316688",target:"_blank",rel:"noopener noreferrer"},m=l(`<p>具体设置方法如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cf.android666.dynamicloadapk<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>sharedUserId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cf.android666.dynamic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="筛选所有已安装应用信息" tabindex="-1"><a class="header-anchor" href="#筛选所有已安装应用信息" aria-hidden="true">#</a> 筛选所有已安装应用信息</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">var</span> packageBeanList<span class="token operator">:</span> ArrayList<span class="token operator">&lt;</span>PackageInfoBean<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">arrayListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token keyword">var</span> packageInfoList<span class="token operator">:</span> ArrayList<span class="token operator">&lt;</span>PackageInfo<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">arrayListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> packageInfoList <span class="token operator">=</span> packageManager<span class="token punctuation">.</span><span class="token function">getInstalledPackages</span><span class="token punctuation">(</span>PackageManager<span class="token punctuation">.</span>GET_UNINSTALLED_PACKAGES<span class="token punctuation">)</span> <span class="token keyword">as</span> ArrayList<span class="token operator">&lt;</span>PackageInfo<span class="token operator">&gt;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>packageInfoList<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token keyword">in</span> packageInfoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>sharedUserId <span class="token operator">!=</span> <span class="token keyword">null</span>
            <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>sharedUserId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sharedUid<span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>x<span class="token punctuation">.</span>packageName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>packageName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//sharedUserId 与当前 App 相同，且 packageName 和当前 App 不同的 App 信息，即插件 App</span>
            packageBeanList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">PackageInfoBean</span><span class="token punctuation">(</span>packageManager
                                                <span class="token punctuation">.</span><span class="token function">getApplicationLabel</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>packageName<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成插件-app-的-context" tabindex="-1"><a class="header-anchor" href="#生成插件-app-的-context" aria-hidden="true">#</a> 生成插件 App 的 Context</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>activity<span class="token punctuation">.</span><span class="token function">createPackageContext</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;cf.android666.pluginapp&quot;</span></span><span class="token punctuation">,</span>
        Context<span class="token punctuation">.</span>CONTEXT_INCLUDE_CODE | Context<span class="token punctuation">.</span>CONTEXT_IGNORE_SECURITY<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-context-反射获取插件-app-中的资源" tabindex="-1"><a class="header-anchor" href="#通过-context-反射获取插件-app-中的资源" aria-hidden="true">#</a> 通过 Context 反射获取插件 App 中的资源</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">//获取 ClassLoader</span>
<span class="token keyword">var</span> pClassLoader <span class="token operator">=</span> <span class="token function">PathClassLoader</span><span class="token punctuation">(</span>pluginContext<span class="token punctuation">.</span>packageResourcePath
                <span class="token punctuation">,</span> ClassLoader<span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//反射获取该类及其资源</span>
<span class="token keyword">var</span> clazz <span class="token operator">=</span> pluginContext<span class="token punctuation">.</span>classLoader
        <span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>pluginContext<span class="token punctuation">.</span>packageName <span class="token operator">+</span> <span class="token string-literal singleline"><span class="token string">&quot;.R\\$mipmap&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">var</span> abc <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">var</span> id <span class="token operator">=</span> abc<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>mipmap<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span>
<span class="token comment">//调用插件 App 的 Context 获取其资源</span>
<span class="token keyword">var</span> bg <span class="token operator">=</span> pluginContext<span class="token punctuation">.</span>resources<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="加载未安装-apk-内资源" tabindex="-1"><a class="header-anchor" href="#加载未安装-apk-内资源" aria-hidden="true">#</a> 加载未安装 Apk 内资源</h2><h3 id="获取-apk-信息" tabindex="-1"><a class="header-anchor" href="#获取-apk-信息" aria-hidden="true">#</a> 获取 apk 信息</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> sdPath <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>absolutePath
<span class="token keyword">val</span> apkPath <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">sdPath</span></span><span class="token string">/plugin/plugin.apk&quot;</span></span>
<span class="token keyword">var</span> info <span class="token operator">=</span> packageManager<span class="token punctuation">.</span><span class="token function">getPackageArchiveInfo</span><span class="token punctuation">(</span>apkPath<span class="token punctuation">,</span> PackageManager<span class="token punctuation">.</span>GET_ACTIVITIES<span class="token punctuation">)</span><span class="token comment">//获取未安装 apk 的 packageInfo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取-classloader" tabindex="-1"><a class="header-anchor" href="#获取-classloader" aria-hidden="true">#</a> 获取 ClassLoader</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token function">getDir</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;dex&quot;</span></span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span>
<span class="token keyword">var</span> dexClassLoader <span class="token operator">=</span> <span class="token function">DexClassLoader</span><span class="token punctuation">(</span>apkPath<span class="token punctuation">,</span> file<span class="token punctuation">.</span>absolutePath<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ClassLoader<span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>getDir() 调用了 Context 的 getDir()</p><p>Retrieve, creating if needed, a new directory in which the application can place its own custom data files. You can use the returned File object to create and access files in this directory. Note that files created through a File object will only be accessible by your own application; you can only set the mode of the entire directory, not of individual files.</p></blockquote><h3 id="通过反射加载类-获取资源" tabindex="-1"><a class="header-anchor" href="#通过反射加载类-获取资源" aria-hidden="true">#</a> 通过反射加载类，获取资源</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">var</span> drawableClazz <span class="token operator">=</span> dexClassLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;cf.android666.pluginapp.R\\$drawable&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">var</span> onePng <span class="token operator">=</span> drawableClazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;abc&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">var</span> onId <span class="token operator">=</span> onePng<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span><span class="token comment">//反射获取资源 id</span>

<span class="token keyword">var</span> resources <span class="token operator">=</span> <span class="token function">getUninstallApkResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//resource 也是通过反射获取到</span>
<span class="token keyword">var</span> drawable <span class="token operator">=</span> resources<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>onId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AssetManager.addAssetPath()</code>方法是用来将 apk 等中的资源添加到<code>AssetManager</code>中，再通过其获取到<code>Resources对象</code>，这样就获取到未安装 apk 中的资源了。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">getUninstallApkResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Resources <span class="token punctuation">{</span>
    <span class="token keyword">var</span> assetManager <span class="token operator">=</span> AssetManager<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> addAssetPath <span class="token operator">=</span> assetManager<span class="token punctuation">.</span>javaClass<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;addAssetPath&quot;</span></span><span class="token punctuation">,</span>String<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span>
    addAssetPath<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>assetManager<span class="token punctuation">,</span> apkPath<span class="token punctuation">)</span><span class="token comment">//设置了 apkPath</span>
    <span class="token keyword">return</span> <span class="token function">Resources</span><span class="token punctuation">(</span>assetManager<span class="token punctuation">,</span> resources<span class="token punctuation">.</span>displayMetrics<span class="token punctuation">,</span> resources<span class="token punctuation">.</span>configuration<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源" aria-hidden="true">#</a> 参考资源</h2>`,19),h={href:"https://www.cnblogs.com/lee0oo0/p/3665066.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/jiangwei0910410003/article/details/51316688",target:"_blank",rel:"noopener noreferrer"};function f(x,y){const s=p("ExternalLinkIcon");return o(),c("div",null,[u,r,d,k,n("blockquote",null,[v,n("p",null,[n("a",g,[a("Android 逆向之旅---Android 中的 sharedUserId 属性详解 - CSDN 博客"),t(s)])])]),m,n("p",null,[n("a",h,[a("Android 之 Android apk 动态加载机制的研究（二）：资源加载和 activity 生命周期管理 - lee0oo0 - 博客园 "),t(s)])]),n("p",null,[n("a",b,[a("Android 逆向之旅---Android 中的 sharedUserId 属性详解 - CSDN 博客"),t(s)])])])}const _=e(i,[["render",f],["__file","8d60b485.html.vue"]]);export{_ as default};
