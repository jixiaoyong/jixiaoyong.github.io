const e=JSON.parse('{"key":"v-70d9837c","path":"/posts/fd5546ac.html","title":"Kotlin 学习笔记 3","lang":"zh-CN","frontmatter":{"permalink":"/posts/fd5546ac.html","title":"Kotlin 学习笔记 3","tags":"kotlin","abbrlink":"fd5546ac","date":"2019-12-24T01:38:59.000Z","updated":"2023-12-30T08:17:02.000Z","description":"本文为笔记性质，尚未成文，待整理 异步流 lazy 方式创建一个序列，只有在访问的时候才生产对应的项目 fun foo(): Sequence&lt;Int&gt; = sequence{ for (i in 1..3) { Thread.sleep(1000)//会阻塞调用线程 yield(i)//生产一个项目 } }","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/fd5546ac.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Kotlin 学习笔记 3"}],["meta",{"property":"og:description","content":"本文为笔记性质，尚未成文，待整理 异步流 lazy 方式创建一个序列，只有在访问的时候才生产对应的项目 fun foo(): Sequence&lt;Int&gt; = sequence{ for (i in 1..3) { Thread.sleep(1000)//会阻塞调用线程 yield(i)//生产一个项目 } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T16:08:43.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2019-12-24T01:38:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T16:08:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kotlin 学习笔记 3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-24T01:38:59.000Z\\",\\"dateModified\\":\\"2024-01-01T16:08:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"异步流","slug":"异步流","link":"#异步流","children":[]},{"level":2,"title":"合并 conflate","slug":"合并-conflate","link":"#合并-conflate","children":[]},{"level":2,"title":"组合多个流","slug":"组合多个流","link":"#组合多个流","children":[]},{"level":2,"title":"流异常","slug":"流异常","link":"#流异常","children":[]},{"level":2,"title":"流完成","slug":"流完成","link":"#流完成","children":[]},{"level":2,"title":"launchIn(this) 与 collect","slug":"launchin-this-与-collect","link":"#launchin-this-与-collect","children":[]},{"level":2,"title":"Channel","slug":"channel","link":"#channel","children":[]},{"level":2,"title":"Flow/Channel/Sequence 的区别","slug":"flow-channel-sequence-的区别","link":"#flow-channel-sequence-的区别","children":[]},{"level":2,"title":"管道","slug":"管道","link":"#管道","children":[]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[{"level":3,"title":"异常的传播","slug":"异常的传播","link":"#异常的传播","children":[]},{"level":3,"title":"监督","slug":"监督","link":"#监督","children":[{"level":5,"title":"监督作业","slug":"监督作业","link":"#监督作业","children":[]},{"level":5,"title":"监督作用域","slug":"监督作用域","link":"#监督作用域","children":[]},{"level":5,"title":"监督协程中的异常","slug":"监督协程中的异常","link":"#监督协程中的异常","children":[]}]},{"level":3,"title":"协程的线程安全","slug":"协程的线程安全","link":"#协程的线程安全","children":[]}]},{"level":2,"title":"Select 表达式","slug":"select-表达式","link":"#select-表达式","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1704125323000,"updatedTime":1704125323000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":13.82,"words":4146},"filePathRelative":"_posts/Kotlin学习笔记3.md","localizedDate":"2019年12月24日","excerpt":"<blockquote>\\n<p>本文为笔记性质，尚未成文，待整理</p>\\n</blockquote>\\n<h2> 异步流</h2>\\n<ol>\\n<li>lazy 方式创建一个序列，只有在访问的时候才生产对应的项目</li>\\n</ol>\\n<div class=\\"language-kotlin line-numbers-mode\\" data-ext=\\"kt\\"><pre class=\\"language-kotlin\\"><code><span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Sequence<span class=\\"token operator\\">&lt;</span>Int<span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> sequence<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token keyword\\">in</span> <span class=\\"token number\\">1</span><span class=\\"token operator\\">..</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        Thread<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//会阻塞调用线程</span>\\n        <span class=\\"token function\\">yield</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token comment\\">//生产一个项目</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
