const e=JSON.parse('{"key":"v-28b7ad47","path":"/posts/b0793c74.html","title":"Java笔记之计算Java对象的大小及其应用","lang":"zh-CN","frontmatter":{"permalink":"/posts/b0793c74.html","title":"Java笔记之计算Java对象的大小及其应用","abbrlink":"b0793c74","date":"2019-12-21T09:44:32.000Z","tag":"java","description":"原理 注意 除非特殊说明，以下所说的计算Java对象大小，不涉及该对象所持有的对象本身的大小，只计算该Java对象本身的大小（其中引用类型对象大小只计算为4 bytes），如果要遍历计算Java对象大小（包含其持有对象的大小）可以参考这篇文章 Sizeof for Java 一个Java对象在内存中的大小包括以下(以64位JVM启用压缩为例，综合这里和这里的信息整理)：","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/b0793c74.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Java笔记之计算Java对象的大小及其应用"}],["meta",{"property":"og:description","content":"原理 注意 除非特殊说明，以下所说的计算Java对象大小，不涉及该对象所持有的对象本身的大小，只计算该Java对象本身的大小（其中引用类型对象大小只计算为4 bytes），如果要遍历计算Java对象大小（包含其持有对象的大小）可以参考这篇文章 Sizeof for Java 一个Java对象在内存中的大小包括以下(以64位JVM启用压缩为例，综合这里和这里的信息整理)："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-11T10:37:03.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2019-12-21T09:44:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-11T10:37:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java笔记之计算Java对象的大小及其应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-21T09:44:32.000Z\\",\\"dateModified\\":\\"2023-10-11T10:37:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"String最长为65534","slug":"string最长为65534","link":"#string最长为65534","children":[]},{"level":2,"title":"枚举类enum","slug":"枚举类enum","link":"#枚举类enum","children":[{"level":3,"title":"枚举类大小的计算","slug":"枚举类大小的计算","link":"#枚举类大小的计算","children":[]},{"level":3,"title":"Android中是否应该使用枚举","slug":"android中是否应该使用枚举","link":"#android中是否应该使用枚举","children":[]}]},{"level":2,"title":"SparseArray&ArrayMap VS HashMap","slug":"sparsearray-arraymap-vs-hashmap","link":"#sparsearray-arraymap-vs-hashmap","children":[]}],"git":{"createdTime":1697020623000,"updatedTime":1697020623000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":8.8,"words":2641},"filePathRelative":"_posts/JavaNoteSizeOfObject.md","localizedDate":"2019年12月21日","excerpt":"<h1> 原理</h1>\\n<p><strong>注意 除非特殊说明，以下所说的计算Java对象大小，不涉及该对象所持有的对象本身的大小，只计算该Java对象本身的大小（其中引用类型对象大小只计算为4 bytes），如果要遍历计算Java对象大小（包含其持有对象的大小）可以参考<a href=\\"https://www.javaworld.com/article/2077408/sizeof-for-java.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这篇文章 Sizeof for Java</a></strong></p>\\n<p>一个Java对象在内存中的大小包括以下(以64位JVM启用压缩为例，综合<a href=\\"https://blog.csdn.net/ITer_ZC/article/details/41822719\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这里</a>和<a href=\\"https://blog.csdn.net/u013380694/article/details/102739636\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这里</a>的信息整理)：</p>","autoDesc":true}');export{e as data};
