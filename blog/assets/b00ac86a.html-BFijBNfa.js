import{_ as i,c as s,o as a,a as e}from"./app-BHa1tV_i.js";const n={},t=e(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><blockquote><p>本文介绍了一个只需要更新 Markdown 文档到 Github，即可实时更新博客内容的方法。</p><p>本文参考<a href="https://juejin.im/post/5a1fa30c6fb9a045263b5d2a" target="_blank" rel="noopener noreferrer">这篇文章</a> 实现，并根据我的需求更改了部分内容，以实现<strong>部署多个 hexo 工程到同一 Github 项目不同目录下</strong>。</p></blockquote><p>Github 为我们提供了<a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">Github Pages</a> 方便我们建立简单的网页来介绍项目，很多时候我们用他来搭建静态博客。</p><p>通过<a href="https://hexo.io/" target="_blank" rel="noopener noreferrer">Hexo</a>可以将我们写的<code>Markdown文档</code>格式化为<code>静态网页</code>，再将其部署到 Github 上面对应的<code>user_name.github.io</code>上面，就可以拥有一个在线的静态博客。</p><p>但是受 Hexo 的限制，每次更新博客内容都需要在更新完 Markdown 文档后，都需要再次重新创建对应的静态网页、将更新提交到 Github。这样的步骤繁琐且没有意义，而且更换电脑后这些环境都需要重新设置一次。</p><p>通过<a href="https://www.travis-ci.org" target="_blank" rel="noopener noreferrer">travis</a>提供的免费 CI 技术，可以让云服务器代替我们实现 Hexo 创建以及同步 Github 等步骤，每次更新博客时<strong>只需要将写好的 Markdown 文档推送到 Github 项目对应目录中，等待一会儿就可以看到更新后的博客了</strong>。</p><p>具体搭建过程可以参考<a href="https://juejin.im/post/5a1fa30c6fb9a045263b5d2a" target="_blank" rel="noopener noreferrer">这篇文章</a> 本文只讲述实现<strong>部署多个 hexo 工程到同一 Github 项目不同目录下</strong>需要注意的地方：。</p><blockquote><p><strong>懒——是第一生产力</strong></p></blockquote><h2 id="具体差异" tabindex="-1"><a class="header-anchor" href="#具体差异"><span>具体差异</span></a></h2><h3 id="hexo-分支的结构" tabindex="-1"><a class="header-anchor" href="#hexo-分支的结构"><span>hexo 分支的结构</span></a></h3><p>因为有多个 hexo 项目，所以在 github 项目的 hexo 分支下，对不同的 hexo 项目分别新建文件夹存放。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> your_name.github.io</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> //github项目，切换到hexo分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  --hexo_project1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> //本地hexo项目1的所有文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  --hexo_project2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> //本地hexo项目2的所有文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="travis-yml" tabindex="-1"><a class="header-anchor" href="#travis-yml"><span>.travis.yml</span></a></h3><p>重点修改<code>script:</code>和<code>after_script:</code>两部分：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 1. 创建对应的静态博客内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd blog</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 第一个本地 hexo 项目</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">hexo clean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">hexo generate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd ..</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd imissyou</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 第二个本地 hexo 项目</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">hexo clean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">hexo generate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd ..</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">after_script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git config user.name &quot;jixiaoyong&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git config user.email &quot;jixiaoyong1995@gmail.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd ..</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">mkdir publish</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd publish</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 2. 在这里再拉取 master 分支的文件，并删除旧的博客内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git clone https://\${GH_TOKEN}@github.com/jixiaoyong/jixiaoyong.github.io.git</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rm -rf ./jixiaoyong.github.io/blog/*</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rm -rf ./jixiaoyong.github.io/imissyou/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # 3. 将第 1 步生成的静态博客内容添加到 master 分支，并同步到 github 上面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd ..</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cp -rf jixiaoyong.github.io/blog/public/* publish/jixiaoyong.github.io/blog/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cp -rf jixiaoyong.github.io/imissyou/public/* publish/jixiaoyong.github.io/imissyou/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cd publish/jixiaoyong.github.io/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git commit -m &quot;auto update by www.travis-ci.org&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">git push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文档链接：<a href="https://github.com/jixiaoyong/jixiaoyong.github.io/blob/hexo_blog/.travis.yml" target="_blank" rel="noopener noreferrer">.travis.yml</a></p><h2 id="更新博客内容" tabindex="-1"><a class="header-anchor" href="#更新博客内容"><span>更新博客内容</span></a></h2><p>当以上内容都配置完成后，只要新建一个符合 hexo 要求的文档，并提交到 Github 对应项目的 hexo 分支中<code>source</code>目录，Travis 便会自动帮我们创建并更新静态网页。</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2><p><a href="https://juejin.im/post/5a1fa30c6fb9a045263b5d2a" target="_blank" rel="noopener noreferrer">Hexo 遇上 Travis-CI：可能是最通俗易懂的自动发布博客图文教程</a> （完全在该文档指导下完成，部分步骤有差异，感谢作者<a href="https://juejin.im/user/56efe6461ea493005565dafd" target="_blank" rel="noopener noreferrer">MichaelX</a> ）</p>`,20),l=[t];function h(r,p){return a(),s("div",null,l)}const d=i(n,[["render",h],["__file","b00ac86a.html.vue"]]),k=JSON.parse('{"path":"/posts/b00ac86a.html","title":"利用 travis 通过 Hexo 在 Github 上自动部署 Markdown 文档","lang":"zh-CN","frontmatter":{"permalink":"/posts/b00ac86a.html","title":"利用 travis 通过 Hexo 在 Github 上自动部署 Markdown 文档","tag":"ci","abbrlink":"b00ac86a","date":"2018-12-20T14:35:34.000Z","updated":"2023-12-30T08:17:02.000Z","isOriginal":true,"description":"前言 本文介绍了一个只需要更新 Markdown 文档到 Github，即可实时更新博客内容的方法。 本文参考这篇文章 实现，并根据我的需求更改了部分内容，以实现部署多个 hexo 工程到同一 Github 项目不同目录下。 Github 为我们提供了Github Pages 方便我们建立简单的网页来介绍项目，很多时候我们用他来搭建静态博客。 通过He...","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/b00ac86a.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"利用 travis 通过 Hexo 在 Github 上自动部署 Markdown 文档"}],["meta",{"property":"og:description","content":"前言 本文介绍了一个只需要更新 Markdown 文档到 Github，即可实时更新博客内容的方法。 本文参考这篇文章 实现，并根据我的需求更改了部分内容，以实现部署多个 hexo 工程到同一 Github 项目不同目录下。 Github 为我们提供了Github Pages 方便我们建立简单的网页来介绍项目，很多时候我们用他来搭建静态博客。 通过He..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T16:00:22.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"ci"}],["meta",{"property":"article:published_time","content":"2018-12-20T14:35:34.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T16:00:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"利用 travis 通过 Hexo 在 Github 上自动部署 Markdown 文档\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-12-20T14:35:34.000Z\\",\\"dateModified\\":\\"2024-05-31T16:00:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"具体差异","slug":"具体差异","link":"#具体差异","children":[{"level":3,"title":"hexo 分支的结构","slug":"hexo-分支的结构","link":"#hexo-分支的结构","children":[]},{"level":3,"title":".travis.yml","slug":"travis-yml","link":"#travis-yml","children":[]}]},{"level":2,"title":"更新博客内容","slug":"更新博客内容","link":"#更新博客内容","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1653726847000,"updatedTime":1717171222000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":3},{"name":"JI,XIAOYONG","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":2.66,"words":798},"filePathRelative":"_posts/利用GitHub-Hexo-travis自动部署发布Markdown文件.md","localizedDate":"2018年12月20日","excerpt":"<h2>前言</h2>\\n<blockquote>\\n<p>本文介绍了一个只需要更新 Markdown 文档到 Github，即可实时更新博客内容的方法。</p>\\n<p>本文参考<a href=\\"https://juejin.im/post/5a1fa30c6fb9a045263b5d2a\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这篇文章</a> 实现，并根据我的需求更改了部分内容，以实现<strong>部署多个 hexo 工程到同一 Github 项目不同目录下</strong>。</p>\\n</blockquote>\\n<p>Github 为我们提供了<a href=\\"https://pages.github.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Github Pages</a> 方便我们建立简单的网页来介绍项目，很多时候我们用他来搭建静态博客。</p>","autoDesc":true}');export{d as comp,k as data};
