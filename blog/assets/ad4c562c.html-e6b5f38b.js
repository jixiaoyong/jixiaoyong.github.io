const n=JSON.parse('{"key":"v-4d514ca0","path":"/posts/ad4c562c.html","title":"AndroidService 相关知识","lang":"zh-CN","frontmatter":{"permalink":"/posts/ad4c562c.html","title":"AndroidService 相关知识","tags":"android","abbrlink":"ad4c562c","date":"2018-01-13T17:10:01.000Z","updated":"2023-12-30T08:17:02.000Z","description":"启动一个 Service MyServices.java 必须继承自 Service，或者如 IntentService 本身就是等其子类 public class MyServices extends Service { @Nullable @Override public IBinder onBind(Intent intent) { Log.d(\\"TAG\\",\\"onBind\\"); return null; } @Override public void onCreate() { super.onCreate(); Log.d(\\"TAG\\",\\"onCreate\\"); } @Override public void onDestroy() { super.onDestroy(); Log.d(\\"TAG\\", \\"onDestroy: \\"); } } AndroidManifest.xml 注册 MyServices &lt;application&gt; \\t\\t&lt;service android:name=\\".MyServices\\" android:exported=\\"true\\"&gt; &lt;intent-filter&gt; &lt;action android:name=\\"cf.android666.myservices\\" /&gt; &lt;/intent-filter&gt; &lt;/service&gt; &lt;/application&gt; MainActivity.java 在 java 中调用 Service，需要ServiceConnection类 ServiceConnection mConnection = new ServiceConnection() { @Override public void onServiceConnected(ComponentName name, IBinder service) { Log.d(TAG, \\"onServiceConnected: 服务绑定\\"); } @Override public void onServiceDisconnected(ComponentName name) { Log.d(TAG, \\"onServiceDisconnected: 服务解绑\\"); } }; Intent intent = new Intent(context, MyServices.class); bindService(intent, mConnection, Service.BIND_AUTO_CREATE);//绑定 Service //startService(intent); 启动 service unbindService(mConnection);//解绑 Service bindService()和startService()的区别在于： ** bindService()将 service 和当前的 activity 绑定在一起，activity 销毁时，service 也会被销毁； ** startService()则只是“启动”service，在此后 service 的活动和 activity 无关，并一直存活。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/ad4c562c.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"AndroidService 相关知识"}],["meta",{"property":"og:description","content":"启动一个 Service MyServices.java 必须继承自 Service，或者如 IntentService 本身就是等其子类 public class MyServices extends Service { @Nullable @Override public IBinder onBind(Intent intent) { Log.d(\\"TAG\\",\\"onBind\\"); return null; } @Override public void onCreate() { super.onCreate(); Log.d(\\"TAG\\",\\"onCreate\\"); } @Override public void onDestroy() { super.onDestroy(); Log.d(\\"TAG\\", \\"onDestroy: \\"); } } AndroidManifest.xml 注册 MyServices &lt;application&gt; \\t\\t&lt;service android:name=\\".MyServices\\" android:exported=\\"true\\"&gt; &lt;intent-filter&gt; &lt;action android:name=\\"cf.android666.myservices\\" /&gt; &lt;/intent-filter&gt; &lt;/service&gt; &lt;/application&gt; MainActivity.java 在 java 中调用 Service，需要ServiceConnection类 ServiceConnection mConnection = new ServiceConnection() { @Override public void onServiceConnected(ComponentName name, IBinder service) { Log.d(TAG, \\"onServiceConnected: 服务绑定\\"); } @Override public void onServiceDisconnected(ComponentName name) { Log.d(TAG, \\"onServiceDisconnected: 服务解绑\\"); } }; Intent intent = new Intent(context, MyServices.class); bindService(intent, mConnection, Service.BIND_AUTO_CREATE);//绑定 Service //startService(intent); 启动 service unbindService(mConnection);//解绑 Service bindService()和startService()的区别在于： ** bindService()将 service 和当前的 activity 绑定在一起，activity 销毁时，service 也会被销毁； ** startService()则只是“启动”service，在此后 service 的活动和 activity 无关，并一直存活。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T15:53:49.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2018-01-13T17:10:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T15:53:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AndroidService 相关知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-01-13T17:10:01.000Z\\",\\"dateModified\\":\\"2024-01-01T15:53:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":3,"title":"启动一个 Service","slug":"启动一个-service","link":"#启动一个-service","children":[]},{"level":2,"title":"Service 具体分析","slug":"service-具体分析","link":"#service-具体分析","children":[{"level":3,"title":"Service 绑定服务的三种方式","slug":"service-绑定服务的三种方式","link":"#service-绑定服务的三种方式","children":[]}]},{"level":2,"title":"绑定服务时的注意事项","slug":"绑定服务时的注意事项","link":"#绑定服务时的注意事项","children":[]},{"level":2,"title":"Service 绑定和启动转换","slug":"service-绑定和启动转换","link":"#service-绑定和启动转换","children":[]},{"level":2,"title":"前台服务和通知","slug":"前台服务和通知","link":"#前台服务和通知","children":[]}],"git":{"createdTime":1704124429000,"updatedTime":1704124429000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":6.17,"words":1851},"filePathRelative":"_posts/AndroidService相关知识.md","localizedDate":"2018年1月14日","excerpt":"<h3> 启动一个 Service</h3>\\n<ul>\\n<li>\\n<p>MyServices.java</p>\\n<p>必须继承自 Service，或者如 IntentService 本身就是等其子类</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyServices</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Service</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Nullable</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">IBinder</span> <span class=\\"token function\\">onBind</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Intent</span> intent<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Log</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"TAG\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"onBind\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onCreate</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onCreate</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Log</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"TAG\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"onCreate\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onDestroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onDestroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Log</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"TAG\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"onDestroy: \\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>AndroidManifest.xml</p>\\n<p>注册 MyServices</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>application</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\t\\t<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>service</span> <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>.MyServices<span class=\\"token punctuation\\">\\"</span></span>\\n            <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>exported</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>intent-filter</span><span class=\\"token punctuation\\">&gt;</span></span>\\n                <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>action</span> <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>cf.android666.myservices<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>intent-filter</span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>service</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>application</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>MainActivity.java</p>\\n<p>在 java 中调用 Service，需要<code>ServiceConnection</code>类</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">ServiceConnection</span> mConnection <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ServiceConnection</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token annotation punctuation\\">@Override</span>\\n            <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onServiceConnected</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ComponentName</span> name<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">IBinder</span> service<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\">Log</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">TAG</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"onServiceConnected: 服务绑定\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n            <span class=\\"token annotation punctuation\\">@Override</span>\\n            <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onServiceDisconnected</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ComponentName</span> name<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\">Log</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">TAG</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"onServiceDisconnected: 服务解绑\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">Intent</span> intent <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Intent</span><span class=\\"token punctuation\\">(</span>context<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">MyServices</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">bindService</span><span class=\\"token punctuation\\">(</span>intent<span class=\\"token punctuation\\">,</span> mConnection<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Service</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">BIND_AUTO_CREATE</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//绑定 Service</span>\\n<span class=\\"token comment\\">//startService(intent); 启动 service</span>\\n<span class=\\"token function\\">unbindService</span><span class=\\"token punctuation\\">(</span>mConnection<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//解绑 Service</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><code>bindService()</code>和<code>startService()</code>的区别在于：</p>\\n<p>** <code>bindService()</code>将 service 和当前的 activity 绑定在一起，activity 销毁时，service 也会被销毁；</p>\\n<p>** <code>startService()</code>则只是“启动”service，在此后 service 的活动和 activity 无关，并一直存活。</p>\\n</li>\\n</ul>","autoDesc":true}');export{n as data};
