const t=JSON.parse('{"key":"v-04faf74b","path":"/posts/875283bd.html","title":"Java笔记之匿名内部类和final","lang":"zh-CN","frontmatter":{"permalink":"/posts/875283bd.html","title":"Java笔记之匿名内部类和final","abbrlink":"875283bd","date":"2019-12-20T22:02:16.000Z","tag":"java","description":"为什么匿名内部类使用局部引用要用final？ 先说结论： 由于JAVA匿名内部类的实现并不是真正的闭包，而是在生成内部类的时候将局部变量的引用拷贝了一份到内部类中。如果不将这个外部类设置为final的话，外部类或者内部类修改这个局部变量后，另外一处使用的仍然是修改前的值，这样就会产生问题，而如果将其修改为final则保证了局部变量与内部类使用的值是一致的。 JDK1.8 后局部变量不要求用final了？","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/875283bd.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Java笔记之匿名内部类和final"}],["meta",{"property":"og:description","content":"为什么匿名内部类使用局部引用要用final？ 先说结论： 由于JAVA匿名内部类的实现并不是真正的闭包，而是在生成内部类的时候将局部变量的引用拷贝了一份到内部类中。如果不将这个外部类设置为final的话，外部类或者内部类修改这个局部变量后，另外一处使用的仍然是修改前的值，这样就会产生问题，而如果将其修改为final则保证了局部变量与内部类使用的值是一致的。 JDK1.8 后局部变量不要求用final了？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-11T09:53:08.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2019-12-20T22:02:16.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-11T09:53:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java笔记之匿名内部类和final\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-20T22:02:16.000Z\\",\\"dateModified\\":\\"2023-10-11T09:53:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1697017988000,"updatedTime":1697017988000,"contributors":[{"name":"JI,XIAOYONG","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":3.08,"words":925},"filePathRelative":"_posts/JavaNoteFinalAndInnerClass.md","localizedDate":"2019年12月21日","excerpt":"<h1> 为什么<code>匿名内部类</code>使用<code>局部引用</code>要用<code>final</code>？</h1>\\n<p>先说结论：</p>\\n<p>由于JAVA匿名内部类的实现并不是真正的闭包，而是在生成内部类的时候<strong>将局部变量的引用拷贝了一份到内部类中</strong>。如果不将这个外部类设置为<code>final</code>的话，外部类或者内部类修改这个局部变量后，另外一处使用的仍然是修改前的值，这样就会产生问题，而如果将其修改为<code>final</code>则保证了局部变量与内部类使用的值是一致的。</p>\\n<h1> JDK1.8 后局部变量不要求用<code>final</code>了？</h1>","autoDesc":true}');export{t as data};
