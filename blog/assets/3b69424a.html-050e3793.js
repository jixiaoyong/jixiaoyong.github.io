const a=JSON.parse('{"key":"v-aa8d6032","path":"/posts/3b69424a.html","title":"Android 控件组","lang":"zh-CN","frontmatter":{"permalink":"/posts/3b69424a.html","title":"Android 控件组","abbrlink":"3b69424a","date":"2017-09-20T15:25:05.000Z","updated":"2023-12-30T08:17:02.000Z","description":"这几天的工作中用到了控件组来实现复杂布局，效果不错，记录下来备用。 1. 定义控件组布局 xxx_layout.xml 在这里定义要使用的控件组布局，这里的布局决定了布局显示的样子。 &lt;?xml version=\\"1.0\\" encoding=\\"utf-8\\"?&gt; &lt;LinearLayout xmlns:android=\\"http://schemas.android.com/apk/res/android\\" xmlns:app=\\"http://schemas.android.com/apk/res-auto\\" android:layout_width=\\"match_parent\\" android:layout_height=\\"wrap_content\\" android:padding=\\"10dp\\"&gt; &lt;ImageView ... /&gt; &lt;EditText .../&gt; &lt;ImageView ... /&gt; &lt;/LinearLayout&gt;","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/3b69424a.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Android 控件组"}],["meta",{"property":"og:description","content":"这几天的工作中用到了控件组来实现复杂布局，效果不错，记录下来备用。 1. 定义控件组布局 xxx_layout.xml 在这里定义要使用的控件组布局，这里的布局决定了布局显示的样子。 &lt;?xml version=\\"1.0\\" encoding=\\"utf-8\\"?&gt; &lt;LinearLayout xmlns:android=\\"http://schemas.android.com/apk/res/android\\" xmlns:app=\\"http://schemas.android.com/apk/res-auto\\" android:layout_width=\\"match_parent\\" android:layout_height=\\"wrap_content\\" android:padding=\\"10dp\\"&gt; &lt;ImageView ... /&gt; &lt;EditText .../&gt; &lt;ImageView ... /&gt; &lt;/LinearLayout&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-30T10:32:41.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2017-09-20T15:25:05.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-30T10:32:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 控件组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-09-20T15:25:05.000Z\\",\\"dateModified\\":\\"2023-12-30T10:32:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1703932361000,"updatedTime":1703932361000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":1}]},"readingTime":{"minutes":2.59,"words":776},"filePathRelative":"_posts/Android控件组.md","localizedDate":"2017年9月20日","excerpt":"<p>这几天的工作中用到了控件组来实现复杂布局，效果不错，记录下来备用。</p>\\n<h1> 1. 定义控件组布局 xxx_layout.xml</h1>\\n<p>在这里定义要使用的控件组布局，这里的布局决定了布局显示的样子。</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token prolog\\">&lt;?xml version=\\"1.0\\" encoding=\\"utf-8\\"?&gt;</span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>LinearLayout</span> <span class=\\"token attr-name\\"><span class=\\"token namespace\\">xmlns:</span>android</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>http://schemas.android.com/apk/res/android<span class=\\"token punctuation\\">\\"</span></span>\\n    <span class=\\"token attr-name\\"><span class=\\"token namespace\\">xmlns:</span>app</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>http://schemas.android.com/apk/res-auto<span class=\\"token punctuation\\">\\"</span></span>\\n    <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>layout_width</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>match_parent<span class=\\"token punctuation\\">\\"</span></span>\\n    <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>layout_height</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>wrap_content<span class=\\"token punctuation\\">\\"</span></span>\\n    <span class=\\"token attr-name\\"><span class=\\"token namespace\\">android:</span>padding</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>10dp<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>ImageView</span>\\n        <span class=\\"token attr-name\\">...</span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>EditText</span>\\n        <span class=\\"token attr-name\\">...</span><span class=\\"token punctuation\\">/&gt;</span></span>\\n\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>ImageView</span>\\n        <span class=\\"token attr-name\\">...</span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>LinearLayout</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
