import{_ as s,r as c,o as d,c as p,a as n,b as e,d as a,e as o}from"./app-77b42b64.js";const r={},i=o('<p><code>Xfermode</code>是 Android 中用来指示<code>Paint</code>绘制的内容与 View 中已有内容的混合计算方式，也就是用来确定图形绘制到目标图形的时候，如何处理两个图形重合部分的颜色变化。共 18 个，分为 Alpha 合成和混合两种。</p><p>设要绘制的图形为<code>src</code>，已经绘制好的图形为<code>dst</code>。</p><blockquote><p>需要注意的是，这些图片除了要绘制的图形有着色之外，其他部分要为透明，并且<strong>包括透明区域在内的图片大小（宽高）要能完全覆盖另外一张图片的图形区域</strong>，否则绘制出的图形可能与预设的效果不一致</p></blockquote><p>按照官方的定义，不同<code>Xfermode</code>绘制结果如下：</p><figure><img src="https://jixiaoyong.github.io/images/20200415211144.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><p>要实现如上效果，需要注意：</p>',7),l=n("p",null,[n("code",null,"src"),e("和"),n("code",null,"dst"),e("符合要求（要有合适的透明区域）")],-1),u=n("code",null,"xfermode",-1),k={href:"http://Hencoder.com",target:"_blank",rel:"noopener noreferrer"},h=n("figure",null,[n("img",{src:"https://jixiaoyong.github.io/images/20200416213802.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),_=o(`<li><p>在新的图层绘制（在新的图层按照<code>xfermode</code>规则绘制，然后再将其绘制到原有图层）：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">//新建图层</span>
<span class="token keyword">val</span> saveCount <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span><span class="token number">0F</span><span class="token punctuation">,</span><span class="token number">0F</span><span class="token punctuation">,</span>width<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span>

<span class="token comment">//dst  已经绘制的图形  ;  src 我们要绘制的图形</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span><span class="token number">0F</span><span class="token punctuation">,</span> <span class="token number">0F</span><span class="token punctuation">,</span> dstPaint<span class="token punctuation">)</span>

srcPaint<span class="token punctuation">.</span>xfermode <span class="token operator">=</span> <span class="token function">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>SRC_OUT<span class="token punctuation">)</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span><span class="token number">0F</span><span class="token punctuation">,</span> <span class="token number">0F</span><span class="token punctuation">,</span> srcPaint<span class="token punctuation">)</span>
srcPaint<span class="token punctuation">.</span>xfermode <span class="token operator">=</span> <span class="token keyword">null</span>

<span class="token comment">//将新图层绘制到原有图层上</span>
canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>saveCount<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),m=o(`<p>关闭硬件加速（可选）</p><p>硬件加速的本质是把一部分 CPU 计算的工作量交给 GPU 完成，可以加速绘制速度。</p><p>但是由于硬件加速不支持<code>canvas.drawXXX()</code>的部分方法，为了避免在某些机型上面无法使用这些方法，可以关闭硬件加速：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>view<span class="token punctuation">.</span><span class="token function">setLayerType</span><span class="token punctuation">(</span><span class="token constant">LAYER_TYPE_SOFTWARE</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),f={href:"https://hencoder.com/ui-1-8/",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"xfermode-分类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xfermode-分类","aria-hidden":"true"},"#"),e(" Xfermode 分类")],-1),b={href:"https://hencoder.com/ui-1-2/",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"PorterDuff.Mode.DST_IN",-1),S=o('<figure><img src="https://jixiaoyong.github.io/images/20200416214402.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看出，<code>Xfermode</code>的本质是处理<code>dst</code>与<code>src</code><strong>重合与未重合部分</strong>的展示与否，以及颜色变化。</p><blockquote><p>这里的“重合部分”与“未重合部分”，其实也包括了各个图形的透明部分，将<code>dst</code>与<code>src</code>的透明与不透明颜色相互作用，才会出现下述效果。</p></blockquote><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td><code>CLEAR</code></td><td>清除所有内容</td></tr><tr><td><code>DST</code></td><td>只绘制<code>DST</code></td></tr><tr><td><code>DST_ATOP</code></td><td>先绘制<code>SRC</code>，再在顶部绘制<code>DST</code>与<code>SRC</code>重合的部分</td></tr><tr><td><code>DST_IN</code></td><td>只绘制<code>DST</code>与<code>SRC</code>重合部分</td></tr><tr><td><code>DST_OUT</code></td><td>只绘制<code>DST</code>与<code>SRC</code>未重合部分</td></tr><tr><td><code>DST_OVER</code></td><td>将<code>DST</code>绘制在<code>SRC</code>上面</td></tr><tr><td><code>SRC</code></td><td>只绘制<code>SRC</code></td></tr><tr><td><code>SRC_ATOP</code></td><td>先绘制<code>DST</code>，再在顶部绘制<code>SRC</code>与<code>DST</code>重合的部分</td></tr><tr><td><code>SRC_IN</code></td><td>只绘制<code>SRC</code>与<code>DST</code>重合部分</td></tr><tr><td><code>SRC_OUT</code></td><td>只绘制<code>SRC</code>与<code>DST</code>未重合部分</td></tr><tr><td><code>SRC_OVER</code></td><td>将<code>SRC</code>绘制在<code>DST</code>上面</td></tr><tr><td></td><td></td></tr><tr><td><code>XOR</code></td><td></td></tr><tr><td><code>ADD</code></td><td></td></tr><tr><td><code>DARKEN</code></td><td></td></tr><tr><td><code>LIGHTEN</code></td><td></td></tr><tr><td><code>MULTIPLY</code></td><td></td></tr><tr><td><code>OVERLAY</code></td><td></td></tr><tr><td><code>SCREEN</code></td><td></td></tr></tbody></table>',4),C={href:"https://github.com/jixiaoyong/library/commit/71864b6546460acfaae6299890a0cf76da76b7d7",target:"_blank",rel:"noopener noreferrer"},T=n("figure",null,[n("img",{src:"https://jixiaoyong.github.io/images/20200415211144.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),x=n("h2",{id:"参考文献",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文献","aria-hidden":"true"},"#"),e(" 参考文献")],-1),R={href:"https://hencoder.com/ui-1-2/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://hencoder.com/ui-1-8/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://developer.android.google.cn/reference/android/graphics/PorterDuff.Mode.html",target:"_blank",rel:"noopener noreferrer"};function P(A,E){const t=c("ExternalLinkIcon");return d(),p("div",null,[i,n("ul",null,[n("li",null,[l,n("p",null,[e("这是因为"),u,e("的效果，使用透明部分的像素与已有图形对应位置交叉作用，得出所需要的效果，如果透明区域过小，则无法作用到对应的图形。下面这个来自 "),n("a",k,[e("Hencoder.com"),a(t)]),e(" 的图可以很形象的解释：")]),h]),_,n("li",null,[m,n("p",null,[e("关于硬件加速更详细的说明可以参考这里："),n("a",f,[e("HenCoder Android 自定义 View 1-8 硬件加速"),a(t)])])])]),g,n("p",null,[n("a",b,[e("HenCoder.com"),a(t)]),e("关于"),v,e("的动画解释：")]),S,n("p",null,[e("各个效果如下 (源码及使用见"),n("a",C,[e("github"),a(t)]),e(")：")]),T,x,n("p",null,[n("a",R,[e("HenCoder Android 开发进阶：自定义 View 1-2 Paint 详解"),a(t)])]),n("p",null,[n("a",D,[e("HenCoder Android 自定义 View 1-8 硬件加速"),a(t)])]),n("p",null,[n("a",y,[e("PorterDuff.Mode"),a(t)])])])}const L=s(r,[["render",P],["__file","104c9058.html.vue"]]);export{L as default};
