const e=JSON.parse('{"key":"v-4819e612","path":"/posts/ae8e53be.html","title":"Flutter 滑动分析之 NestedScrollView","lang":"zh-CN","frontmatter":{"permalink":"/posts/ae8e53be.html","title":"Flutter 滑动分析之 NestedScrollView","tags":"flutter","date":"2022-07-19T09:48:12.000Z","updated":"2023-12-30T08:17:02.000Z","abbrlink":"ae8e53be","description":"Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类： 基于 RenderBox 的 box protocol 实现的，主要基于 Size 实现布局。常见的有SingleChildScrollView。 基于 RenderSliver 的 sliver protocol 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自ScrollView的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。","head":[["meta",{"property":"og:url","content":"https://jixiaoyong.github.io/blog/posts/ae8e53be.html"}],["meta",{"property":"og:site_name","content":"JI,XIAOYONG"}],["meta",{"property":"og:title","content":"Flutter 滑动分析之 NestedScrollView"}],["meta",{"property":"og:description","content":"Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类： 基于 RenderBox 的 box protocol 实现的，主要基于 Size 实现布局。常见的有SingleChildScrollView。 基于 RenderSliver 的 sliver protocol 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自ScrollView的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T15:46:34.000Z"}],["meta",{"property":"article:author","content":"JI,XIAOYONG"}],["meta",{"property":"article:published_time","content":"2022-07-19T09:48:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-01T15:46:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter 滑动分析之 NestedScrollView\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-19T09:48:12.000Z\\",\\"dateModified\\":\\"2024-01-01T15:46:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JI,XIAOYONG\\",\\"url\\":\\"https://jixiaoyong.github.io\\"}]}"]]},"headers":[{"level":2,"title":"用例","slug":"用例","link":"#用例","children":[]},{"level":2,"title":"源码分析","slug":"源码分析","link":"#源码分析","children":[{"level":3,"title":"NestedScrollViewState","slug":"nestedscrollviewstate","link":"#nestedscrollviewstate","children":[]},{"level":3,"title":"_NestedScrollController","slug":"nestedscrollcontroller","link":"#nestedscrollcontroller","children":[{"level":4,"title":"创建_NestedScrollPosition","slug":"创建-nestedscrollposition","link":"#创建-nestedscrollposition","children":[]},{"level":4,"title":"在 ScrollPosition 变化时通知 coordinator","slug":"在-scrollposition-变化时通知-coordinator","link":"#在-scrollposition-变化时通知-coordinator","children":[]}]},{"level":3,"title":"_NestedScrollPosition","slug":"nestedscrollposition","link":"#nestedscrollposition","children":[{"level":4,"title":"setParent","slug":"setparent","link":"#setparent","children":[]},{"level":4,"title":"absorb","slug":"absorb","link":"#absorb","children":[]},{"level":4,"title":"applyClampedDragUpdate","slug":"applyclampeddragupdate","link":"#applyclampeddragupdate","children":[]},{"level":4,"title":"applyFullDragUpdate","slug":"applyfulldragupdate","link":"#applyfulldragupdate","children":[]},{"level":4,"title":"applyClampedPointerSignalUpdate","slug":"applyclampedpointersignalupdate","link":"#applyclampedpointersignalupdate","children":[]},{"level":4,"title":"applyNewDimensions()","slug":"applynewdimensions","link":"#applynewdimensions","children":[]}]},{"level":3,"title":"_NestedScrollCoordinator","slug":"nestedscrollcoordinator","link":"#nestedscrollcoordinator","children":[{"level":4,"title":"beginActivity","slug":"beginactivity","link":"#beginactivity","children":[]},{"level":4,"title":"applyUserOffset","slug":"applyuseroffset","link":"#applyuseroffset","children":[]}]}]},{"level":2,"title":"优劣对比","slug":"优劣对比","link":"#优劣对比","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1680852645000,"updatedTime":1704123994000,"contributors":[{"name":"jixiaoyong","email":"jixiaoyong1995@gmail.com","commits":4}]},"readingTime":{"minutes":21.53,"words":6458},"filePathRelative":"_posts/Flutter滑动分析之NestedScrollView.md","localizedDate":"2022年7月19日","excerpt":"<p>Flutter 中的 scrollable widget 根据实现方式的不同，可以分为两大类：</p>\\n<ul>\\n<li>基于 RenderBox 的 box protocol 实现的，主要基于 Size 实现布局。常见的有<a href=\\"https://jixiaoyong.github.io/blog/posts/d3bdcb53.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SingleChildScrollView</a>。</li>\\n<li>基于 RenderSliver 的 sliver protocol 实现的，主要基于 SliverGeometry 实现布局。比如 CustomScrollView 及其子类 ListView、GridView 等继承自<a href=\\"https://jixiaoyong.github.io/blog/posts/60f8d92f.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ScrollView</a>的 Widget，以及基于 CustomScrollView 的 NestedScrollView、基于 Viewport 等的 PageView、TabBarView 等直接对 SliverFillViewport 等进行封装的 Widget。</li>\\n</ul>","autoDesc":true}');export{e as data};
