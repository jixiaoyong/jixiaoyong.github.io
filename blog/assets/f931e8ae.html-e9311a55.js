import{_ as n,o as s,c as a,e as p}from"./app-b003f4e2.js";const e={},t=p(`<p>AIDL（Android Interface Definition Language，Android 接口定义语言）用于 Android IPC，适用于<strong>大量并发</strong>请求。</p><p>主要分为两部分：</p><ol><li>服务端 创建 Service 监听 Client 的请求，通过创建 AIDL 将接口暴露给客户端</li><li>客户端 绑定到服务端获取 BInder 对象，将其转化为对应 AIDL，并调用接口对应方法。</li></ol><p>两者的连线就是 AIDL，因此两个 APP 的 AIDL 必须一致，可以将 AIDL 文件放到一个 Android Library 中，或者打成 aar 文件供二者依赖。</p><p>也可以将 AIDL 涉及到的 AIDL 文件、java 都放到 AIDL 文件夹下，然后在 build.gradle 的<code>android{...}</code>中添加</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>    sourceSets{
         main{
             java.srcDirs = [&#39;src/main/java&#39;,&#39;src/main/adil&#39;]
         }
     }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即添加一个 java 路径</p><h2 id="aidl-文件特点" tabindex="-1"><a class="header-anchor" href="#aidl-文件特点" aria-hidden="true">#</a> AIDL 文件特点</h2><h3 id="支持的数据格式" tabindex="-1"><a class="header-anchor" href="#支持的数据格式" aria-hidden="true">#</a> 支持的数据格式</h3><p>基本数据类型、List（ArrayList）、Map（HashMap）以及实现了 Parcelable 接口的对象、AIDL 接口。</p><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ul><li>自定义的 Parcelable 对象、AIDL 对象必须显示 import。</li><li>AIDL 中用到的 Parcelable 对象必须新建一个同名 AIDL 接口，声明其为 Parcelable 类型。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// People.aidl</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">People</span></span><span class="token punctuation">;</span>
<span class="token comment">// Declare any non-default types here with import statements</span>

parcelable <span class="token class-name">People</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>AIDL 中除了基本数据类型，其他的参数必须标记方向（in,out,inout）。</li><li>AIDL 不支持方法重载，也就是说不能有两个同名的方法（即使参数类型、个数不同也不行）。</li><li>AIDL 中只支持方法，不支持静态变量。</li></ul><h2 id="aidl-用法" tabindex="-1"><a class="header-anchor" href="#aidl-用法" aria-hidden="true">#</a> AIDL 用法</h2><h3 id="aidl" tabindex="-1"><a class="header-anchor" href="#aidl" aria-hidden="true">#</a> AIDL</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ManagerAidl.aidl</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">People</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">TaskCallBack</span></span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">ManagerAidl</span> <span class="token punctuation">{</span>
    <span class="token comment">//客户端提供的方法</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPeopleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">addPeople</span><span class="token punctuation">(</span>in <span class="token class-name">People</span> people<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//回调接口，用于服务端往客户端通信</span>
    <span class="token keyword">void</span> <span class="token function">registerCallBack</span><span class="token punctuation">(</span>in <span class="token class-name">TaskCallBack</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">unregisterCallBack</span><span class="token punctuation">(</span>in <span class="token class-name">TaskCallBack</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// TaskCallBack.aidl</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">People</span></span><span class="token punctuation">;</span>

<span class="token comment">// https://blog.csdn.net/woshiwoshiyu/article/details/54266101</span>
<span class="token comment">//回调的具体方法，供服务端回调</span>
<span class="token keyword">interface</span> <span class="token class-name">TaskCallBack</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">callBack</span><span class="token punctuation">(</span>in <span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onPeopleChange</span><span class="token punctuation">(</span>in <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peoples<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//People.java</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token keyword">implements</span> <span class="token class-name">Parcelable</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//PeopleManager.java</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ComponentName</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ServiceConnection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">IBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">RemoteException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 一个管理类，封装了客户端绑定服务端的一些方法
 * 属于客户端部分，不过放在 AIDL 中便于多个客户端开发
 * Created by jixiaoyong on 2018/8/6.
 * email:jixiaoyong1995@gmail.com
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PeopleManager</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">PeopleManager</span> mPeopleManager<span class="token punctuation">;</span>

    <span class="token keyword">private</span>  <span class="token class-name">Context</span> mContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span>  <span class="token class-name">Listener</span> mListener<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ManagerAidl</span> managerAidl<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peopleList<span class="token punctuation">;</span>

    <span class="token comment">//实现该回调方法，用于调用客户端的具体方法</span>
    <span class="token comment">//注意这里是 new TaskCallBack.Stub()，而非 new TaskCallBack(),否则服务器无法接收到 callback</span>
    <span class="token comment">//TaskCallBack.Stub() 是 TaskCallBack 的子类，当跨进程通信时传递的是 proxy 类</span>
    <span class="token keyword">private</span> <span class="token class-name">TaskCallBack</span> callBack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TaskCallBack<span class="token punctuation">.</span>Stub</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">callBack</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            mListener<span class="token punctuation">.</span><span class="token function">onCallback</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPeopleChange</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peoples<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            peopleList <span class="token operator">=</span> peoples<span class="token punctuation">;</span>
            mListener<span class="token punctuation">.</span><span class="token function">onPeopleListChange</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">ServiceConnection</span> serviceConnection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServiceConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onServiceConnected</span><span class="token punctuation">(</span><span class="token class-name">ComponentName</span> name<span class="token punctuation">,</span> <span class="token class-name">IBinder</span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//在连接上服务端后，客户端从 IBinder 对象中获取到 AIDL 接口对象，并执行其方法</span>
            managerAidl <span class="token operator">=</span>  <span class="token class-name">ManagerAidl<span class="token punctuation">.</span>Stub</span><span class="token punctuation">.</span><span class="token function">asInterface</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                peopleList <span class="token operator">=</span> managerAidl<span class="token punctuation">.</span><span class="token function">getPeopleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                managerAidl<span class="token punctuation">.</span><span class="token function">registerCallBack</span><span class="token punctuation">(</span>callBack<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mListener<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>mPeopleManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onServiceDisconnected</span><span class="token punctuation">(</span><span class="token class-name">ComponentName</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                managerAidl<span class="token punctuation">.</span><span class="token function">unregisterCallBack</span><span class="token punctuation">(</span>callBack<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">PeopleManager</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span><span class="token class-name">Listener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
        mListener <span class="token operator">=</span> listener<span class="token punctuation">;</span>
        peopleList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token string">&quot;cf.android666.demo&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;cf.android666.demo.MService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Android5.0 后必须显示的启动服务</span>
        context<span class="token punctuation">.</span><span class="token function">bindService</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> serviceConnection<span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">BIND_AUTO_CREATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span><span class="token class-name">Listener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPeopleManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PeopleManager</span><span class="token punctuation">(</span> context<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addPeople</span><span class="token punctuation">(</span><span class="token class-name">People</span> people<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            managerAidl<span class="token punctuation">.</span><span class="token function">addPeople</span><span class="token punctuation">(</span>people<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPeopleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> peopleList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//子类可以实现该 Listener 的方法，在服务端调用这些方法时执行对应操作</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Listener</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">PeopleManager</span> peopleManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//服务连接成功</span>
        <span class="token keyword">void</span> <span class="token function">onCallback</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onPeopleListChange</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peoples<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端" aria-hidden="true">#</a> 服务端</h3><p>注意 MService 在 AndroidManife.xml 中配置：</p><p><code>android:exported=&quot;true&quot;android:enabled=&quot;true&quot;android:process=&quot;:people&quot;</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//MService.java</span>
<span class="token keyword">package</span> <span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">IBinder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">RemoteCallbackList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">RemoteException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">InputFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">ManagerAidl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">People</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cf<span class="token punctuation">.</span>android666<span class="token punctuation">.</span>androidlib<span class="token punctuation">.</span></span><span class="token class-name">TaskCallBack</span></span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * Created by jixiaoyong on 2018/8/6.
 * email:jixiaoyong1995@gmail.com
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token keyword">implements</span> <span class="token class-name">ManagerAidl<span class="token punctuation">.</span>Stub<span class="token punctuation">.</span>DeathRecipient</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> mPeopleList<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">RemoteCallbackList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TaskCallBack</span><span class="token punctuation">&gt;</span></span> callbackList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RemoteCallbackList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">TaskCallBack</span> mCallBack<span class="token punctuation">;</span>

	<span class="token comment">//使用 AIDL 接口生成 mIBinder，在服务端实现接口各个方法，供客户端调用</span>
    <span class="token keyword">private</span> <span class="token class-name">IBinder</span> mIBinder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ManagerAidl<span class="token punctuation">.</span>Stub</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPeopleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mPeopleList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addPeople</span><span class="token punctuation">(</span><span class="token class-name">People</span> people<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            mPeopleList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>people<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">onPeopleChange</span><span class="token punctuation">(</span>mPeopleList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerCallBack</span><span class="token punctuation">(</span><span class="token class-name">TaskCallBack</span> callback<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            mCallBack <span class="token operator">=</span> callback<span class="token punctuation">;</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;TAG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;registerCallBack 注册回调方法 callback == null&quot;</span> <span class="token operator">+</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//注意这里一定要判断非空</span>
                callbackList<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unregisterCallBack</span><span class="token punctuation">(</span><span class="token class-name">TaskCallBack</span> callback<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemoteException</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callbackList<span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">IBinder</span> <span class="token function">onBind</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;onBind  MService 开始了&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPeopleList <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPeopleList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPeopleList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token string">&quot;people&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> mIBinder<span class="token punctuation">;</span><span class="token comment">//返回开始用 AIDL 创建的 IBinder</span>
    <span class="token punctuation">}</span>

	<span class="token comment">//实现 DeathRecipient 接口的方法，在客户端终止后自动调用该方法</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binderDied</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        callbackList<span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span>mCallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//这里时在服务端调用回调方法的写法，是从 callbackList 依次取出来执行</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onPeopleChange</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peoples<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>callbackList <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> callbackList<span class="token punctuation">.</span><span class="token function">beginBroadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callbackList<span class="token punctuation">.</span><span class="token function">getBroadcastItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onPeopleChange</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            callbackList<span class="token punctuation">.</span><span class="token function">finishBroadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ol><li><p>这里用来注册监听的类是 RemoteCallbackList</p><p>我们知道跨进程的两个 listener 是两个不同的对象，那他是怎么保证跨进程注册、注销的是指定的 listener 呢？</p><p>这是因为虽然两个 listener 对象不同，但是他们底层的 Binder 对象是同一个，在 RemoteCallbackList 中有一个以 Binder 对象为 KEY 的 map 来存放这些 listener 对象，当要注销时，只需要按当前待注销的 listener 的 Binder 对象找到已经注册了的 listener 并删除掉即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ArrayMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IBinder</span><span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token punctuation">&gt;</span></span> mCallbacks
        <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IBinder</span><span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，RemoteCallbackList 可以在客户端死亡的时候自动注销掉对应的 listener，这是因为他在注册的同时也对 Binder 的死亡就行了监听。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">E</span> callback<span class="token punctuation">,</span> <span class="token class-name">Object</span> cookie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mCallbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mKilled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Flag unusual case that could be caused by a leak. b/36778087</span>
        <span class="token function">logExcessiveCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IBinder</span> binder <span class="token operator">=</span> callback<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Callback</span> cb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
            binder<span class="token punctuation">.</span><span class="token function">linkToDeath</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//监听 binder 的死亡事件</span>
            mCallbacks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>binder<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment">//当 binder 死亡时，会主动移除其注册的 listener</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">binderDied</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mCallbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mCallbacks<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>mCallback<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">onCallbackDied</span><span class="token punctuation">(</span>mCallback<span class="token punctuation">,</span> mCookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>方法运行的线程</p><p><strong>如果客户端和服务端运行在同一进程</strong>：客户端调用服务端和服务端回调客户端方法（RemoteCallbackList，下同）都会运行在同一线程，即客户端调用服务端时所在的线程，默认为主线程</p><p><strong>如果客户端和服务端运行在不同进程</strong>：客户端调用服务端方法，客户端会被挂起，直到服务端方法在 Binder 线程池中运行完毕，这种情况下服务端可以执行耗时操作而无需另建线程；服务端回调客户端方法运行在客户端主线程 (与客户端调用服务端方法在同一线程)</p><p>通过上述分析，可以注意到一个细节：<strong>虽然在服务端中回调客户端的方法是在服务端的 Binder 线程，但是在客户端中被回调的方法却是和客户端中主动调用服务端方法的线程一致</strong>。</p></li></ol><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">PeopleManager</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//服务连接成功后，可以开始调用服务的一系列方法</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">PeopleManager</span> peopleManager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mPeopleManager <span class="token operator">=</span> peopleManager<span class="token punctuation">;</span>
    peopleList <span class="token operator">=</span> peopleManager<span class="token punctuation">.</span><span class="token function">getPeopleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> peopleList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;people list is &quot;</span> <span class="token operator">+</span> peopleList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//其他回调方法，等服务端回调时会执行对应方法</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPeopleListChange</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">People</span><span class="token punctuation">&gt;</span></span> peoples<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;TAG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;demo2 people 变化了&quot;</span> <span class="token operator">+</span> peoples<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="监听并处理-binder-死亡事件" tabindex="-1"><a class="header-anchor" href="#监听并处理-binder-死亡事件" aria-hidden="true">#</a> 监听并处理 Binder 死亡事件</h3><p>当服务端进程意外死亡时，我们可以选择重新连接服务，一般有两种方式：</p><ol><li>binderDied 在客户端的 Binder 线程池中</li><li>onServiceDisconnected 在客户端 UI 线程</li></ol><h3 id="aidl-的权限验证" tabindex="-1"><a class="header-anchor" href="#aidl-的权限验证" aria-hidden="true">#</a> AIDL 的权限验证</h3><p>可以在服务的 onBind(Intent intent) 或者 onTransact() 方法中做验证</p><p>做验证的手段有：1.permission 验证；2.Uid，Pid 等做验证</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2><p>《Android 开发艺术探索》</p>`,37),c=[t];function o(l,i){return s(),a("div",null,c)}const k=n(e,[["render",o],["__file","f931e8ae.html.vue"]]);export{k as default};
